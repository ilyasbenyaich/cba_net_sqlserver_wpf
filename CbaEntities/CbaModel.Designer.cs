//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CbaModel", "RAT01_CUR01_FROM_FK", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Currency), "RAT01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Rate), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "RAT01_CUR01_TO_FK", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Currency), "RAT01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Rate), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "PER01_CAL01_FK", "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Calendar), "PER01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Period), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "ACS01_CHA01_FK", "Chart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Chart), "ACS01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Segment), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "ACC01_CHA01_FK", "Chart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Chart), "ACC01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Account), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BAL01_CUR01_FK", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Currency), "BAL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Balance), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BAL01_PER01_FK", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "BAL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Balance), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "JHE01_CUR01_FK", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Currency), "JHE01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Journal), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "JHE01_PER01_FK", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "JHE01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Journal), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "JLI01_JHE01_FK", "JHE01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Journal), "JLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.JournalLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "JLI01_ACC01_FK", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Account), "JournalLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.JournalLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BAL01_ACC01_FK", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Account), "Balance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Balance), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BUL01_ACC01_FK", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Account), "BUL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BudgetLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BUD01_CAL01_FK", "Calendar", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Calendar), "BUD01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Budget), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BUL01_BUD01_FK", "BUD01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Budget), "BUL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BudgetLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BUL01_PER01_FK", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "BUL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BudgetLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "PSF01_PFA01_FK", "PFA01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.ProductFamily), "PSF01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.ProductSubFamily), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "PRO01_PSF01_FK", "ProductSubFamily", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.ProductSubFamily), "PRO01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Product), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BIL01_BPA01", "BPA01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "BIL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Bill), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BIL01_LEG01", "LEG01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "BIL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Bill), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BIL01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "BIL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Bill), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BLI01_BIL01", "BIL01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Bill), "BLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BillLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BLI01_PRO01", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "BLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BillLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BLI01_TAX01", "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Tax), "BLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BillLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_GOR01_BPA01", "BPA01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "GOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceipt), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_GOR01_LEG01", "LEG01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "GOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceipt), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_GOR01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "GOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceipt), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "GRL01_GOR01_FK", "GOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.GoodsReceipt), "GRL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceiptLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_GRL01_WAR01", "WAR01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Warehouse), "GRL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceiptLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "GRL01_PRO01_FK", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "GRL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.GoodsReceiptLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "RFL01_PRO01_FK", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "RFL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.RequestForQuoteLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "RFL01_RFQ01_FK", "RFQ01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.RequestForQuote), "RFL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.RequestForQuoteLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_RFQ01_BPA01", "BPA01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "RFQ01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.RequestForQuote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_RFQ01_LEG01", "LEG01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "RFQ01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.RequestForQuote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_RFQ01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "RFQ01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.RequestForQuote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QLI01_PRO01", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "QLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.QuoteLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QLI01_QUO01", "QUO01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Quote), "QLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.QuoteLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QLI01_TAX01", "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Tax), "QLI01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.QuoteLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QUO01_BPA01", "BPA01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "QUO01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Quote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QUO01_LEG01", "LEG01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "QUO01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Quote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_QUO01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "QUO01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Quote), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BPD01_BPA01", "BPA01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "BPD01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BusinessPartnerAddress), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_JHE01_LEG01", "LEG01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Journal), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHI01_BPA01", "BusinessPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Shipment), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHI01_LEG01", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Shipment), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHI01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Shipment), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHL01_SHI01", "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Shipment), "ShipmentLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.ShipmentLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHL01_PRO01", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "ShipmentLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.ShipmentLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SHL01_TAX01", "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Tax), "ShipmentLines", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.ShipmentLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INL01_INV01", "INV01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.Invoice), "INL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.InvoiceLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INL01_PRO01", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "INL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.InvoiceLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INL01_TAX01", "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Tax), "INL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.InvoiceLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INV01_BPA01", "BusinessPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "INV01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INV01_LEG01", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "INV01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_INV01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "INV01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Invoice), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_LEG01_CHA01", "Chart", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Chart), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BPA01_LEG01", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "BusinessPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BusinessPartner), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_BPD01_TER01", "TER01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Territory), "BusinessPartnerAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.BusinessPartnerAddress), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "ADD01_TER01_FK", "TER01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Territory), "ADD01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Address), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_LEG01_ADD01", "ADD01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Address), "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.LegalEntity), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "BAN01_TER01_FK", "TER01", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Territory), "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.Bank), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "POL01_POR01_FK", "POR01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.PurchaseOrder), "POL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.PurchaseOrderLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "POL01_PRO01_FK", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "POL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.PurchaseOrderLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_POR01_BPA01", "BusinessPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "POR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_POR01_LEG01", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "POR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_POR01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "POR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "SOL01_PRO01_FK", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Product), "SOL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.SaleOrderLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "SOL01_SOR01_FK", "SOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CbaModel.SaleOrder), "SOL01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.SaleOrderLines), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SOR01_BPA01", "BusinessPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.BusinessPartner), "SOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.SaleOrder), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SOR01_LEG01", "LegalEntity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.LegalEntity), "SOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.SaleOrder), true)]
[assembly: EdmRelationshipAttribute("CbaModel", "FK_SOR01_PER01", "Period", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CbaModel.Period), "SOR01", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CbaModel.SaleOrder), true)]

#endregion

namespace CbaModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CbaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CbaEntities object using the connection string found in the 'CbaEntities' section of the application configuration file.
        /// </summary>
        public CbaEntities() : base("name=CbaEntities", "CbaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CbaEntities object.
        /// </summary>
        public CbaEntities(string connectionString) : base(connectionString, "CbaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CbaEntities object.
        /// </summary>
        public CbaEntities(EntityConnection connection) : base(connection, "CbaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currency
        {
            get
            {
                if ((_Currency == null))
                {
                    _Currency = base.CreateObjectSet<Currency>("Currency");
                }
                return _Currency;
            }
        }
        private ObjectSet<Currency> _Currency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calendar> Calendar
        {
            get
            {
                if ((_Calendar == null))
                {
                    _Calendar = base.CreateObjectSet<Calendar>("Calendar");
                }
                return _Calendar;
            }
        }
        private ObjectSet<Calendar> _Calendar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rate> Rate
        {
            get
            {
                if ((_Rate == null))
                {
                    _Rate = base.CreateObjectSet<Rate>("Rate");
                }
                return _Rate;
            }
        }
        private ObjectSet<Rate> _Rate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Period> Period
        {
            get
            {
                if ((_Period == null))
                {
                    _Period = base.CreateObjectSet<Period>("Period");
                }
                return _Period;
            }
        }
        private ObjectSet<Period> _Period;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Chart> Chart
        {
            get
            {
                if ((_Chart == null))
                {
                    _Chart = base.CreateObjectSet<Chart>("Chart");
                }
                return _Chart;
            }
        }
        private ObjectSet<Chart> _Chart;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Segment> Segment
        {
            get
            {
                if ((_Segment == null))
                {
                    _Segment = base.CreateObjectSet<Segment>("Segment");
                }
                return _Segment;
            }
        }
        private ObjectSet<Segment> _Segment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Account
        {
            get
            {
                if ((_Account == null))
                {
                    _Account = base.CreateObjectSet<Account>("Account");
                }
                return _Account;
            }
        }
        private ObjectSet<Account> _Account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tax> Tax
        {
            get
            {
                if ((_Tax == null))
                {
                    _Tax = base.CreateObjectSet<Tax>("Tax");
                }
                return _Tax;
            }
        }
        private ObjectSet<Tax> _Tax;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Balance> Balance
        {
            get
            {
                if ((_Balance == null))
                {
                    _Balance = base.CreateObjectSet<Balance>("Balance");
                }
                return _Balance;
            }
        }
        private ObjectSet<Balance> _Balance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journal
        {
            get
            {
                if ((_Journal == null))
                {
                    _Journal = base.CreateObjectSet<Journal>("Journal");
                }
                return _Journal;
            }
        }
        private ObjectSet<Journal> _Journal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JournalLines> JournalLines
        {
            get
            {
                if ((_JournalLines == null))
                {
                    _JournalLines = base.CreateObjectSet<JournalLines>("JournalLines");
                }
                return _JournalLines;
            }
        }
        private ObjectSet<JournalLines> _JournalLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Budget> Budget
        {
            get
            {
                if ((_Budget == null))
                {
                    _Budget = base.CreateObjectSet<Budget>("Budget");
                }
                return _Budget;
            }
        }
        private ObjectSet<Budget> _Budget;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BudgetLines> BudgetLines
        {
            get
            {
                if ((_BudgetLines == null))
                {
                    _BudgetLines = base.CreateObjectSet<BudgetLines>("BudgetLines");
                }
                return _BudgetLines;
            }
        }
        private ObjectSet<BudgetLines> _BudgetLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductFamily> ProductFamily
        {
            get
            {
                if ((_ProductFamily == null))
                {
                    _ProductFamily = base.CreateObjectSet<ProductFamily>("ProductFamily");
                }
                return _ProductFamily;
            }
        }
        private ObjectSet<ProductFamily> _ProductFamily;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSubFamily> ProductSubFamily
        {
            get
            {
                if ((_ProductSubFamily == null))
                {
                    _ProductSubFamily = base.CreateObjectSet<ProductSubFamily>("ProductSubFamily");
                }
                return _ProductSubFamily;
            }
        }
        private ObjectSet<ProductSubFamily> _ProductSubFamily;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bill> Bill
        {
            get
            {
                if ((_Bill == null))
                {
                    _Bill = base.CreateObjectSet<Bill>("Bill");
                }
                return _Bill;
            }
        }
        private ObjectSet<Bill> _Bill;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillLines> BillLines
        {
            get
            {
                if ((_BillLines == null))
                {
                    _BillLines = base.CreateObjectSet<BillLines>("BillLines");
                }
                return _BillLines;
            }
        }
        private ObjectSet<BillLines> _BillLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoodsReceipt> GoodsReceipt
        {
            get
            {
                if ((_GoodsReceipt == null))
                {
                    _GoodsReceipt = base.CreateObjectSet<GoodsReceipt>("GoodsReceipt");
                }
                return _GoodsReceipt;
            }
        }
        private ObjectSet<GoodsReceipt> _GoodsReceipt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoodsReceiptLines> GoodsReceiptLines
        {
            get
            {
                if ((_GoodsReceiptLines == null))
                {
                    _GoodsReceiptLines = base.CreateObjectSet<GoodsReceiptLines>("GoodsReceiptLines");
                }
                return _GoodsReceiptLines;
            }
        }
        private ObjectSet<GoodsReceiptLines> _GoodsReceiptLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestForQuoteLines> RequestForQuoteLines
        {
            get
            {
                if ((_RequestForQuoteLines == null))
                {
                    _RequestForQuoteLines = base.CreateObjectSet<RequestForQuoteLines>("RequestForQuoteLines");
                }
                return _RequestForQuoteLines;
            }
        }
        private ObjectSet<RequestForQuoteLines> _RequestForQuoteLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestForQuote> RequestForQuote
        {
            get
            {
                if ((_RequestForQuote == null))
                {
                    _RequestForQuote = base.CreateObjectSet<RequestForQuote>("RequestForQuote");
                }
                return _RequestForQuote;
            }
        }
        private ObjectSet<RequestForQuote> _RequestForQuote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuoteLines> QuoteLines
        {
            get
            {
                if ((_QuoteLines == null))
                {
                    _QuoteLines = base.CreateObjectSet<QuoteLines>("QuoteLines");
                }
                return _QuoteLines;
            }
        }
        private ObjectSet<QuoteLines> _QuoteLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quote> Quote
        {
            get
            {
                if ((_Quote == null))
                {
                    _Quote = base.CreateObjectSet<Quote>("Quote");
                }
                return _Quote;
            }
        }
        private ObjectSet<Quote> _Quote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shipment> Shipment
        {
            get
            {
                if ((_Shipment == null))
                {
                    _Shipment = base.CreateObjectSet<Shipment>("Shipment");
                }
                return _Shipment;
            }
        }
        private ObjectSet<Shipment> _Shipment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipmentLines> ShipmentLines
        {
            get
            {
                if ((_ShipmentLines == null))
                {
                    _ShipmentLines = base.CreateObjectSet<ShipmentLines>("ShipmentLines");
                }
                return _ShipmentLines;
            }
        }
        private ObjectSet<ShipmentLines> _ShipmentLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessPartner> BusinessPartner
        {
            get
            {
                if ((_BusinessPartner == null))
                {
                    _BusinessPartner = base.CreateObjectSet<BusinessPartner>("BusinessPartner");
                }
                return _BusinessPartner;
            }
        }
        private ObjectSet<BusinessPartner> _BusinessPartner;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessPartnerAddress> BusinessPartnerAddress
        {
            get
            {
                if ((_BusinessPartnerAddress == null))
                {
                    _BusinessPartnerAddress = base.CreateObjectSet<BusinessPartnerAddress>("BusinessPartnerAddress");
                }
                return _BusinessPartnerAddress;
            }
        }
        private ObjectSet<BusinessPartnerAddress> _BusinessPartnerAddress;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Bank
        {
            get
            {
                if ((_Bank == null))
                {
                    _Bank = base.CreateObjectSet<Bank>("Bank");
                }
                return _Bank;
            }
        }
        private ObjectSet<Bank> _Bank;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LegalEntity> LegalEntity
        {
            get
            {
                if ((_LegalEntity == null))
                {
                    _LegalEntity = base.CreateObjectSet<LegalEntity>("LegalEntity");
                }
                return _LegalEntity;
            }
        }
        private ObjectSet<LegalEntity> _LegalEntity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouse
        {
            get
            {
                if ((_Warehouse == null))
                {
                    _Warehouse = base.CreateObjectSet<Warehouse>("Warehouse");
                }
                return _Warehouse;
            }
        }
        private ObjectSet<Warehouse> _Warehouse;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceLines> InvoiceLines
        {
            get
            {
                if ((_InvoiceLines == null))
                {
                    _InvoiceLines = base.CreateObjectSet<InvoiceLines>("InvoiceLines");
                }
                return _InvoiceLines;
            }
        }
        private ObjectSet<InvoiceLines> _InvoiceLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoice
        {
            get
            {
                if ((_Invoice == null))
                {
                    _Invoice = base.CreateObjectSet<Invoice>("Invoice");
                }
                return _Invoice;
            }
        }
        private ObjectSet<Invoice> _Invoice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Address
        {
            get
            {
                if ((_Address == null))
                {
                    _Address = base.CreateObjectSet<Address>("Address");
                }
                return _Address;
            }
        }
        private ObjectSet<Address> _Address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Territory> Territory
        {
            get
            {
                if ((_Territory == null))
                {
                    _Territory = base.CreateObjectSet<Territory>("Territory");
                }
                return _Territory;
            }
        }
        private ObjectSet<Territory> _Territory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrderLines> PurchaseOrderLines
        {
            get
            {
                if ((_PurchaseOrderLines == null))
                {
                    _PurchaseOrderLines = base.CreateObjectSet<PurchaseOrderLines>("PurchaseOrderLines");
                }
                return _PurchaseOrderLines;
            }
        }
        private ObjectSet<PurchaseOrderLines> _PurchaseOrderLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrder
        {
            get
            {
                if ((_PurchaseOrder == null))
                {
                    _PurchaseOrder = base.CreateObjectSet<PurchaseOrder>("PurchaseOrder");
                }
                return _PurchaseOrder;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleOrderLines> SaleOrderLines
        {
            get
            {
                if ((_SaleOrderLines == null))
                {
                    _SaleOrderLines = base.CreateObjectSet<SaleOrderLines>("SaleOrderLines");
                }
                return _SaleOrderLines;
            }
        }
        private ObjectSet<SaleOrderLines> _SaleOrderLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleOrder> SaleOrder
        {
            get
            {
                if ((_SaleOrder == null))
                {
                    _SaleOrder = base.CreateObjectSet<SaleOrder>("SaleOrder");
                }
                return _SaleOrder;
            }
        }
        private ObjectSet<SaleOrder> _SaleOrder;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrency(Currency currency)
        {
            base.AddObject("Currency", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calendar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendar(Calendar calendar)
        {
            base.AddObject("Calendar", calendar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRate(Rate rate)
        {
            base.AddObject("Rate", rate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Period EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriod(Period period)
        {
            base.AddObject("Period", period);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Chart EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChart(Chart chart)
        {
            base.AddObject("Chart", chart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Segment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSegment(Segment segment)
        {
            base.AddObject("Segment", segment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccount(Account account)
        {
            base.AddObject("Account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tax EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTax(Tax tax)
        {
            base.AddObject("Tax", tax);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Balance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBalance(Balance balance)
        {
            base.AddObject("Balance", balance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournal(Journal journal)
        {
            base.AddObject("Journal", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JournalLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournalLines(JournalLines journalLines)
        {
            base.AddObject("JournalLines", journalLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Budget EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBudget(Budget budget)
        {
            base.AddObject("Budget", budget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BudgetLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBudgetLines(BudgetLines budgetLines)
        {
            base.AddObject("BudgetLines", budgetLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductFamily EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductFamily(ProductFamily productFamily)
        {
            base.AddObject("ProductFamily", productFamily);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSubFamily EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSubFamily(ProductSubFamily productSubFamily)
        {
            base.AddObject("ProductSubFamily", productSubFamily);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bill EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBill(Bill bill)
        {
            base.AddObject("Bill", bill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillLines(BillLines billLines)
        {
            base.AddObject("BillLines", billLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoodsReceipt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodsReceipt(GoodsReceipt goodsReceipt)
        {
            base.AddObject("GoodsReceipt", goodsReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoodsReceiptLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoodsReceiptLines(GoodsReceiptLines goodsReceiptLines)
        {
            base.AddObject("GoodsReceiptLines", goodsReceiptLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestForQuoteLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestForQuoteLines(RequestForQuoteLines requestForQuoteLines)
        {
            base.AddObject("RequestForQuoteLines", requestForQuoteLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestForQuote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestForQuote(RequestForQuote requestForQuote)
        {
            base.AddObject("RequestForQuote", requestForQuote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuoteLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuoteLines(QuoteLines quoteLines)
        {
            base.AddObject("QuoteLines", quoteLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuote(Quote quote)
        {
            base.AddObject("Quote", quote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shipment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipment(Shipment shipment)
        {
            base.AddObject("Shipment", shipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShipmentLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipmentLines(ShipmentLines shipmentLines)
        {
            base.AddObject("ShipmentLines", shipmentLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessPartner EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessPartner(BusinessPartner businessPartner)
        {
            base.AddObject("BusinessPartner", businessPartner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessPartnerAddress EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessPartnerAddress(BusinessPartnerAddress businessPartnerAddress)
        {
            base.AddObject("BusinessPartnerAddress", businessPartnerAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bank EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBank(Bank bank)
        {
            base.AddObject("Bank", bank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LegalEntity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLegalEntity(LegalEntity legalEntity)
        {
            base.AddObject("LegalEntity", legalEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouse EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouse(Warehouse warehouse)
        {
            base.AddObject("Warehouse", warehouse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceLines(InvoiceLines invoiceLines)
        {
            base.AddObject("InvoiceLines", invoiceLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoice(Invoice invoice)
        {
            base.AddObject("Invoice", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddress(Address address)
        {
            base.AddObject("Address", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Territory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritory(Territory territory)
        {
            base.AddObject("Territory", territory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrderLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrderLines(PurchaseOrderLines purchaseOrderLines)
        {
            base.AddObject("PurchaseOrderLines", purchaseOrderLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrder(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrder", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleOrderLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleOrderLines(SaleOrderLines saleOrderLines)
        {
            base.AddObject("SaleOrderLines", saleOrderLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleOrder(SaleOrder saleOrder)
        {
            base.AddObject("SaleOrder", saleOrder);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billID">No Metadata Documentation available.</param>
        public int DeleteBill(Nullable<global::System.Int32> billID)
        {
            ObjectParameter billIDParameter;
            if (billID.HasValue)
            {
                billIDParameter = new ObjectParameter("BillID", billID);
            }
            else
            {
                billIDParameter = new ObjectParameter("BillID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBill", billIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billDetailID">No Metadata Documentation available.</param>
        public int DeleteBillDetail(Nullable<global::System.Int32> billDetailID)
        {
            ObjectParameter billDetailIDParameter;
            if (billDetailID.HasValue)
            {
                billDetailIDParameter = new ObjectParameter("BillDetailID", billDetailID);
            }
            else
            {
                billDetailIDParameter = new ObjectParameter("BillDetailID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBillDetail", billDetailIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="goodsReceiptID">No Metadata Documentation available.</param>
        public int DeleteGoodsReceipt(Nullable<global::System.Int32> goodsReceiptID)
        {
            ObjectParameter goodsReceiptIDParameter;
            if (goodsReceiptID.HasValue)
            {
                goodsReceiptIDParameter = new ObjectParameter("GoodsReceiptID", goodsReceiptID);
            }
            else
            {
                goodsReceiptIDParameter = new ObjectParameter("GoodsReceiptID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteGoodsReceipt", goodsReceiptIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="purchaseOrderID">No Metadata Documentation available.</param>
        public int DeletePurchaseOrder(Nullable<global::System.Int32> purchaseOrderID)
        {
            ObjectParameter purchaseOrderIDParameter;
            if (purchaseOrderID.HasValue)
            {
                purchaseOrderIDParameter = new ObjectParameter("PurchaseOrderID", purchaseOrderID);
            }
            else
            {
                purchaseOrderIDParameter = new ObjectParameter("PurchaseOrderID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeletePurchaseOrder", purchaseOrderIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="purchaseOrderDetailID">No Metadata Documentation available.</param>
        public int DeletePurchaseOrderDetail(Nullable<global::System.Int32> purchaseOrderDetailID)
        {
            ObjectParameter purchaseOrderDetailIDParameter;
            if (purchaseOrderDetailID.HasValue)
            {
                purchaseOrderDetailIDParameter = new ObjectParameter("PurchaseOrderDetailID", purchaseOrderDetailID);
            }
            else
            {
                purchaseOrderDetailIDParameter = new ObjectParameter("PurchaseOrderDetailID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeletePurchaseOrderDetail", purchaseOrderDetailIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestForQuoteID">No Metadata Documentation available.</param>
        public int DeleteRequestForQuote(Nullable<global::System.Int32> requestForQuoteID)
        {
            ObjectParameter requestForQuoteIDParameter;
            if (requestForQuoteID.HasValue)
            {
                requestForQuoteIDParameter = new ObjectParameter("RequestForQuoteID", requestForQuoteID);
            }
            else
            {
                requestForQuoteIDParameter = new ObjectParameter("RequestForQuoteID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteRequestForQuote", requestForQuoteIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestForQuoteDetailsID">No Metadata Documentation available.</param>
        public int DeleteRequestForQuoteDetail(Nullable<global::System.Int32> requestForQuoteDetailsID)
        {
            ObjectParameter requestForQuoteDetailsIDParameter;
            if (requestForQuoteDetailsID.HasValue)
            {
                requestForQuoteDetailsIDParameter = new ObjectParameter("RequestForQuoteDetailsID", requestForQuoteDetailsID);
            }
            else
            {
                requestForQuoteDetailsIDParameter = new ObjectParameter("RequestForQuoteDetailsID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteRequestForQuoteDetail", requestForQuoteDetailsIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billDocumentDate">No Metadata Documentation available.</param>
        /// <param name="billDueDate">No Metadata Documentation available.</param>
        /// <param name="billStatus">No Metadata Documentation available.</param>
        /// <param name="billNote">No Metadata Documentation available.</param>
        /// <param name="billLegalEntity">No Metadata Documentation available.</param>
        /// <param name="billBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="billPeriod">No Metadata Documentation available.</param>
        /// <param name="billDocumentType">No Metadata Documentation available.</param>
        public int InsertBill(Nullable<global::System.DateTime> billDocumentDate, Nullable<global::System.DateTime> billDueDate, global::System.String billStatus, global::System.String billNote, Nullable<global::System.Int32> billLegalEntity, Nullable<global::System.Int32> billBusinessPartner, Nullable<global::System.Int32> billPeriod, Nullable<global::System.Int32> billDocumentType)
        {
            ObjectParameter billDocumentDateParameter;
            if (billDocumentDate.HasValue)
            {
                billDocumentDateParameter = new ObjectParameter("BillDocumentDate", billDocumentDate);
            }
            else
            {
                billDocumentDateParameter = new ObjectParameter("BillDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter billDueDateParameter;
            if (billDueDate.HasValue)
            {
                billDueDateParameter = new ObjectParameter("BillDueDate", billDueDate);
            }
            else
            {
                billDueDateParameter = new ObjectParameter("BillDueDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter billStatusParameter;
            if (billStatus != null)
            {
                billStatusParameter = new ObjectParameter("BillStatus", billStatus);
            }
            else
            {
                billStatusParameter = new ObjectParameter("BillStatus", typeof(global::System.String));
            }
    
            ObjectParameter billNoteParameter;
            if (billNote != null)
            {
                billNoteParameter = new ObjectParameter("BillNote", billNote);
            }
            else
            {
                billNoteParameter = new ObjectParameter("BillNote", typeof(global::System.String));
            }
    
            ObjectParameter billLegalEntityParameter;
            if (billLegalEntity.HasValue)
            {
                billLegalEntityParameter = new ObjectParameter("BillLegalEntity", billLegalEntity);
            }
            else
            {
                billLegalEntityParameter = new ObjectParameter("BillLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter billBusinessPartnerParameter;
            if (billBusinessPartner.HasValue)
            {
                billBusinessPartnerParameter = new ObjectParameter("BillBusinessPartner", billBusinessPartner);
            }
            else
            {
                billBusinessPartnerParameter = new ObjectParameter("BillBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter billPeriodParameter;
            if (billPeriod.HasValue)
            {
                billPeriodParameter = new ObjectParameter("BillPeriod", billPeriod);
            }
            else
            {
                billPeriodParameter = new ObjectParameter("BillPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter billDocumentTypeParameter;
            if (billDocumentType.HasValue)
            {
                billDocumentTypeParameter = new ObjectParameter("BillDocumentType", billDocumentType);
            }
            else
            {
                billDocumentTypeParameter = new ObjectParameter("BillDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertBill", billDocumentDateParameter, billDueDateParameter, billStatusParameter, billNoteParameter, billLegalEntityParameter, billBusinessPartnerParameter, billPeriodParameter, billDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertBillDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertBillDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="goodsReceiptDocumentDate">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptStatus">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptNote">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptLegalEntity">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptPeriod">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptDocumentType">No Metadata Documentation available.</param>
        public int InsertGoodsReceipt(Nullable<global::System.DateTime> goodsReceiptDocumentDate, global::System.String goodsReceiptStatus, global::System.String goodsReceiptNote, Nullable<global::System.Int32> goodsReceiptLegalEntity, Nullable<global::System.Int32> goodsReceiptBusinessPartner, Nullable<global::System.Int32> goodsReceiptPeriod, Nullable<global::System.Int32> goodsReceiptDocumentType)
        {
            ObjectParameter goodsReceiptDocumentDateParameter;
            if (goodsReceiptDocumentDate.HasValue)
            {
                goodsReceiptDocumentDateParameter = new ObjectParameter("GoodsReceiptDocumentDate", goodsReceiptDocumentDate);
            }
            else
            {
                goodsReceiptDocumentDateParameter = new ObjectParameter("GoodsReceiptDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter goodsReceiptStatusParameter;
            if (goodsReceiptStatus != null)
            {
                goodsReceiptStatusParameter = new ObjectParameter("GoodsReceiptStatus", goodsReceiptStatus);
            }
            else
            {
                goodsReceiptStatusParameter = new ObjectParameter("GoodsReceiptStatus", typeof(global::System.String));
            }
    
            ObjectParameter goodsReceiptNoteParameter;
            if (goodsReceiptNote != null)
            {
                goodsReceiptNoteParameter = new ObjectParameter("GoodsReceiptNote", goodsReceiptNote);
            }
            else
            {
                goodsReceiptNoteParameter = new ObjectParameter("GoodsReceiptNote", typeof(global::System.String));
            }
    
            ObjectParameter goodsReceiptLegalEntityParameter;
            if (goodsReceiptLegalEntity.HasValue)
            {
                goodsReceiptLegalEntityParameter = new ObjectParameter("GoodsReceiptLegalEntity", goodsReceiptLegalEntity);
            }
            else
            {
                goodsReceiptLegalEntityParameter = new ObjectParameter("GoodsReceiptLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptBusinessPartnerParameter;
            if (goodsReceiptBusinessPartner.HasValue)
            {
                goodsReceiptBusinessPartnerParameter = new ObjectParameter("GoodsReceiptBusinessPartner", goodsReceiptBusinessPartner);
            }
            else
            {
                goodsReceiptBusinessPartnerParameter = new ObjectParameter("GoodsReceiptBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptPeriodParameter;
            if (goodsReceiptPeriod.HasValue)
            {
                goodsReceiptPeriodParameter = new ObjectParameter("GoodsReceiptPeriod", goodsReceiptPeriod);
            }
            else
            {
                goodsReceiptPeriodParameter = new ObjectParameter("GoodsReceiptPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptDocumentTypeParameter;
            if (goodsReceiptDocumentType.HasValue)
            {
                goodsReceiptDocumentTypeParameter = new ObjectParameter("GoodsReceiptDocumentType", goodsReceiptDocumentType);
            }
            else
            {
                goodsReceiptDocumentTypeParameter = new ObjectParameter("GoodsReceiptDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertGoodsReceipt", goodsReceiptDocumentDateParameter, goodsReceiptStatusParameter, goodsReceiptNoteParameter, goodsReceiptLegalEntityParameter, goodsReceiptBusinessPartnerParameter, goodsReceiptPeriodParameter, goodsReceiptDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertGoodsReceiptDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertGoodsReceiptDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="purchaseOrderDocumentDate">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderStatus">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderNote">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderLegalEntity">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderPeriod">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderDocumentType">No Metadata Documentation available.</param>
        public int InsertPurchaseOrder(Nullable<global::System.DateTime> purchaseOrderDocumentDate, global::System.String purchaseOrderStatus, global::System.String purchaseOrderNote, Nullable<global::System.Int32> purchaseOrderLegalEntity, Nullable<global::System.Int32> purchaseOrderBusinessPartner, Nullable<global::System.Int32> purchaseOrderPeriod, Nullable<global::System.Int32> purchaseOrderDocumentType)
        {
            ObjectParameter purchaseOrderDocumentDateParameter;
            if (purchaseOrderDocumentDate.HasValue)
            {
                purchaseOrderDocumentDateParameter = new ObjectParameter("PurchaseOrderDocumentDate", purchaseOrderDocumentDate);
            }
            else
            {
                purchaseOrderDocumentDateParameter = new ObjectParameter("PurchaseOrderDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter purchaseOrderStatusParameter;
            if (purchaseOrderStatus != null)
            {
                purchaseOrderStatusParameter = new ObjectParameter("PurchaseOrderStatus", purchaseOrderStatus);
            }
            else
            {
                purchaseOrderStatusParameter = new ObjectParameter("PurchaseOrderStatus", typeof(global::System.String));
            }
    
            ObjectParameter purchaseOrderNoteParameter;
            if (purchaseOrderNote != null)
            {
                purchaseOrderNoteParameter = new ObjectParameter("PurchaseOrderNote", purchaseOrderNote);
            }
            else
            {
                purchaseOrderNoteParameter = new ObjectParameter("PurchaseOrderNote", typeof(global::System.String));
            }
    
            ObjectParameter purchaseOrderLegalEntityParameter;
            if (purchaseOrderLegalEntity.HasValue)
            {
                purchaseOrderLegalEntityParameter = new ObjectParameter("PurchaseOrderLegalEntity", purchaseOrderLegalEntity);
            }
            else
            {
                purchaseOrderLegalEntityParameter = new ObjectParameter("PurchaseOrderLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderBusinessPartnerParameter;
            if (purchaseOrderBusinessPartner.HasValue)
            {
                purchaseOrderBusinessPartnerParameter = new ObjectParameter("PurchaseOrderBusinessPartner", purchaseOrderBusinessPartner);
            }
            else
            {
                purchaseOrderBusinessPartnerParameter = new ObjectParameter("PurchaseOrderBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderPeriodParameter;
            if (purchaseOrderPeriod.HasValue)
            {
                purchaseOrderPeriodParameter = new ObjectParameter("PurchaseOrderPeriod", purchaseOrderPeriod);
            }
            else
            {
                purchaseOrderPeriodParameter = new ObjectParameter("PurchaseOrderPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderDocumentTypeParameter;
            if (purchaseOrderDocumentType.HasValue)
            {
                purchaseOrderDocumentTypeParameter = new ObjectParameter("PurchaseOrderDocumentType", purchaseOrderDocumentType);
            }
            else
            {
                purchaseOrderDocumentTypeParameter = new ObjectParameter("PurchaseOrderDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertPurchaseOrder", purchaseOrderDocumentDateParameter, purchaseOrderStatusParameter, purchaseOrderNoteParameter, purchaseOrderLegalEntityParameter, purchaseOrderBusinessPartnerParameter, purchaseOrderPeriodParameter, purchaseOrderDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertPurchaseOrderDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertPurchaseOrderDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestForQuoteDocumentDate">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteStatus">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteNote">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteLegalEntity">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="requestForQuotePeriod">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteDocumentType">No Metadata Documentation available.</param>
        public int InsertRequestForQuote(Nullable<global::System.DateTime> requestForQuoteDocumentDate, global::System.String requestForQuoteStatus, global::System.String requestForQuoteNote, Nullable<global::System.Int32> requestForQuoteLegalEntity, Nullable<global::System.Int32> requestForQuoteBusinessPartner, Nullable<global::System.Int32> requestForQuotePeriod, Nullable<global::System.Int32> requestForQuoteDocumentType)
        {
            ObjectParameter requestForQuoteDocumentDateParameter;
            if (requestForQuoteDocumentDate.HasValue)
            {
                requestForQuoteDocumentDateParameter = new ObjectParameter("RequestForQuoteDocumentDate", requestForQuoteDocumentDate);
            }
            else
            {
                requestForQuoteDocumentDateParameter = new ObjectParameter("RequestForQuoteDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter requestForQuoteStatusParameter;
            if (requestForQuoteStatus != null)
            {
                requestForQuoteStatusParameter = new ObjectParameter("RequestForQuoteStatus", requestForQuoteStatus);
            }
            else
            {
                requestForQuoteStatusParameter = new ObjectParameter("RequestForQuoteStatus", typeof(global::System.String));
            }
    
            ObjectParameter requestForQuoteNoteParameter;
            if (requestForQuoteNote != null)
            {
                requestForQuoteNoteParameter = new ObjectParameter("RequestForQuoteNote", requestForQuoteNote);
            }
            else
            {
                requestForQuoteNoteParameter = new ObjectParameter("RequestForQuoteNote", typeof(global::System.String));
            }
    
            ObjectParameter requestForQuoteLegalEntityParameter;
            if (requestForQuoteLegalEntity.HasValue)
            {
                requestForQuoteLegalEntityParameter = new ObjectParameter("RequestForQuoteLegalEntity", requestForQuoteLegalEntity);
            }
            else
            {
                requestForQuoteLegalEntityParameter = new ObjectParameter("RequestForQuoteLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuoteBusinessPartnerParameter;
            if (requestForQuoteBusinessPartner.HasValue)
            {
                requestForQuoteBusinessPartnerParameter = new ObjectParameter("RequestForQuoteBusinessPartner", requestForQuoteBusinessPartner);
            }
            else
            {
                requestForQuoteBusinessPartnerParameter = new ObjectParameter("RequestForQuoteBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuotePeriodParameter;
            if (requestForQuotePeriod.HasValue)
            {
                requestForQuotePeriodParameter = new ObjectParameter("RequestForQuotePeriod", requestForQuotePeriod);
            }
            else
            {
                requestForQuotePeriodParameter = new ObjectParameter("RequestForQuotePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuoteDocumentTypeParameter;
            if (requestForQuoteDocumentType.HasValue)
            {
                requestForQuoteDocumentTypeParameter = new ObjectParameter("RequestForQuoteDocumentType", requestForQuoteDocumentType);
            }
            else
            {
                requestForQuoteDocumentTypeParameter = new ObjectParameter("RequestForQuoteDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertRequestForQuote", requestForQuoteDocumentDateParameter, requestForQuoteStatusParameter, requestForQuoteNoteParameter, requestForQuoteLegalEntityParameter, requestForQuoteBusinessPartnerParameter, requestForQuotePeriodParameter, requestForQuoteDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertRequestForQuoteDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertRequestForQuoteDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billID">No Metadata Documentation available.</param>
        /// <param name="billDocumentDate">No Metadata Documentation available.</param>
        /// <param name="billDueDate">No Metadata Documentation available.</param>
        /// <param name="billStatus">No Metadata Documentation available.</param>
        /// <param name="billNote">No Metadata Documentation available.</param>
        /// <param name="billLegalEntity">No Metadata Documentation available.</param>
        /// <param name="billBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="billPeriod">No Metadata Documentation available.</param>
        /// <param name="billDocumentType">No Metadata Documentation available.</param>
        public int UpdateBill(Nullable<global::System.Int32> billID, Nullable<global::System.DateTime> billDocumentDate, Nullable<global::System.DateTime> billDueDate, global::System.String billStatus, global::System.String billNote, Nullable<global::System.Int32> billLegalEntity, Nullable<global::System.Int32> billBusinessPartner, Nullable<global::System.Int32> billPeriod, Nullable<global::System.Int32> billDocumentType)
        {
            ObjectParameter billIDParameter;
            if (billID.HasValue)
            {
                billIDParameter = new ObjectParameter("BillID", billID);
            }
            else
            {
                billIDParameter = new ObjectParameter("BillID", typeof(global::System.Int32));
            }
    
            ObjectParameter billDocumentDateParameter;
            if (billDocumentDate.HasValue)
            {
                billDocumentDateParameter = new ObjectParameter("BillDocumentDate", billDocumentDate);
            }
            else
            {
                billDocumentDateParameter = new ObjectParameter("BillDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter billDueDateParameter;
            if (billDueDate.HasValue)
            {
                billDueDateParameter = new ObjectParameter("BillDueDate", billDueDate);
            }
            else
            {
                billDueDateParameter = new ObjectParameter("BillDueDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter billStatusParameter;
            if (billStatus != null)
            {
                billStatusParameter = new ObjectParameter("BillStatus", billStatus);
            }
            else
            {
                billStatusParameter = new ObjectParameter("BillStatus", typeof(global::System.String));
            }
    
            ObjectParameter billNoteParameter;
            if (billNote != null)
            {
                billNoteParameter = new ObjectParameter("BillNote", billNote);
            }
            else
            {
                billNoteParameter = new ObjectParameter("BillNote", typeof(global::System.String));
            }
    
            ObjectParameter billLegalEntityParameter;
            if (billLegalEntity.HasValue)
            {
                billLegalEntityParameter = new ObjectParameter("BillLegalEntity", billLegalEntity);
            }
            else
            {
                billLegalEntityParameter = new ObjectParameter("BillLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter billBusinessPartnerParameter;
            if (billBusinessPartner.HasValue)
            {
                billBusinessPartnerParameter = new ObjectParameter("BillBusinessPartner", billBusinessPartner);
            }
            else
            {
                billBusinessPartnerParameter = new ObjectParameter("BillBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter billPeriodParameter;
            if (billPeriod.HasValue)
            {
                billPeriodParameter = new ObjectParameter("BillPeriod", billPeriod);
            }
            else
            {
                billPeriodParameter = new ObjectParameter("BillPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter billDocumentTypeParameter;
            if (billDocumentType.HasValue)
            {
                billDocumentTypeParameter = new ObjectParameter("BillDocumentType", billDocumentType);
            }
            else
            {
                billDocumentTypeParameter = new ObjectParameter("BillDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateBill", billIDParameter, billDocumentDateParameter, billDueDateParameter, billStatusParameter, billNoteParameter, billLegalEntityParameter, billBusinessPartnerParameter, billPeriodParameter, billDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="billDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateBillDetails(Nullable<global::System.Int32> billDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter billDetailsIDParameter;
            if (billDetailsID.HasValue)
            {
                billDetailsIDParameter = new ObjectParameter("BillDetailsID", billDetailsID);
            }
            else
            {
                billDetailsIDParameter = new ObjectParameter("BillDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateBillDetails", billDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="goodsReceiptID">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptDocumentDate">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptStatus">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptNote">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptLegalEntity">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptPeriod">No Metadata Documentation available.</param>
        /// <param name="goodsReceiptDocumentType">No Metadata Documentation available.</param>
        public int UpdateGoodsReceipt(Nullable<global::System.Int32> goodsReceiptID, Nullable<global::System.DateTime> goodsReceiptDocumentDate, global::System.String goodsReceiptStatus, global::System.String goodsReceiptNote, Nullable<global::System.Int32> goodsReceiptLegalEntity, Nullable<global::System.Int32> goodsReceiptBusinessPartner, Nullable<global::System.Int32> goodsReceiptPeriod, Nullable<global::System.Int32> goodsReceiptDocumentType)
        {
            ObjectParameter goodsReceiptIDParameter;
            if (goodsReceiptID.HasValue)
            {
                goodsReceiptIDParameter = new ObjectParameter("GoodsReceiptID", goodsReceiptID);
            }
            else
            {
                goodsReceiptIDParameter = new ObjectParameter("GoodsReceiptID", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptDocumentDateParameter;
            if (goodsReceiptDocumentDate.HasValue)
            {
                goodsReceiptDocumentDateParameter = new ObjectParameter("GoodsReceiptDocumentDate", goodsReceiptDocumentDate);
            }
            else
            {
                goodsReceiptDocumentDateParameter = new ObjectParameter("GoodsReceiptDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter goodsReceiptStatusParameter;
            if (goodsReceiptStatus != null)
            {
                goodsReceiptStatusParameter = new ObjectParameter("GoodsReceiptStatus", goodsReceiptStatus);
            }
            else
            {
                goodsReceiptStatusParameter = new ObjectParameter("GoodsReceiptStatus", typeof(global::System.String));
            }
    
            ObjectParameter goodsReceiptNoteParameter;
            if (goodsReceiptNote != null)
            {
                goodsReceiptNoteParameter = new ObjectParameter("GoodsReceiptNote", goodsReceiptNote);
            }
            else
            {
                goodsReceiptNoteParameter = new ObjectParameter("GoodsReceiptNote", typeof(global::System.String));
            }
    
            ObjectParameter goodsReceiptLegalEntityParameter;
            if (goodsReceiptLegalEntity.HasValue)
            {
                goodsReceiptLegalEntityParameter = new ObjectParameter("GoodsReceiptLegalEntity", goodsReceiptLegalEntity);
            }
            else
            {
                goodsReceiptLegalEntityParameter = new ObjectParameter("GoodsReceiptLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptBusinessPartnerParameter;
            if (goodsReceiptBusinessPartner.HasValue)
            {
                goodsReceiptBusinessPartnerParameter = new ObjectParameter("GoodsReceiptBusinessPartner", goodsReceiptBusinessPartner);
            }
            else
            {
                goodsReceiptBusinessPartnerParameter = new ObjectParameter("GoodsReceiptBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptPeriodParameter;
            if (goodsReceiptPeriod.HasValue)
            {
                goodsReceiptPeriodParameter = new ObjectParameter("GoodsReceiptPeriod", goodsReceiptPeriod);
            }
            else
            {
                goodsReceiptPeriodParameter = new ObjectParameter("GoodsReceiptPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter goodsReceiptDocumentTypeParameter;
            if (goodsReceiptDocumentType.HasValue)
            {
                goodsReceiptDocumentTypeParameter = new ObjectParameter("GoodsReceiptDocumentType", goodsReceiptDocumentType);
            }
            else
            {
                goodsReceiptDocumentTypeParameter = new ObjectParameter("GoodsReceiptDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateGoodsReceipt", goodsReceiptIDParameter, goodsReceiptDocumentDateParameter, goodsReceiptStatusParameter, goodsReceiptNoteParameter, goodsReceiptLegalEntityParameter, goodsReceiptBusinessPartnerParameter, goodsReceiptPeriodParameter, goodsReceiptDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="goodsReceiptDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateGoodsReceiptDetails(Nullable<global::System.Int32> goodsReceiptDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter goodsReceiptDetailsIDParameter;
            if (goodsReceiptDetailsID.HasValue)
            {
                goodsReceiptDetailsIDParameter = new ObjectParameter("GoodsReceiptDetailsID", goodsReceiptDetailsID);
            }
            else
            {
                goodsReceiptDetailsIDParameter = new ObjectParameter("GoodsReceiptDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateGoodsReceiptDetails", goodsReceiptDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="purchaseOrderID">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderDocumentDate">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderStatus">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderNote">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderLegalEntity">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderPeriod">No Metadata Documentation available.</param>
        /// <param name="purchaseOrderDocumentType">No Metadata Documentation available.</param>
        public int UpdatePurchaseOrder(Nullable<global::System.Int32> purchaseOrderID, Nullable<global::System.DateTime> purchaseOrderDocumentDate, global::System.String purchaseOrderStatus, global::System.String purchaseOrderNote, Nullable<global::System.Int32> purchaseOrderLegalEntity, Nullable<global::System.Int32> purchaseOrderBusinessPartner, Nullable<global::System.Int32> purchaseOrderPeriod, Nullable<global::System.Int32> purchaseOrderDocumentType)
        {
            ObjectParameter purchaseOrderIDParameter;
            if (purchaseOrderID.HasValue)
            {
                purchaseOrderIDParameter = new ObjectParameter("PurchaseOrderID", purchaseOrderID);
            }
            else
            {
                purchaseOrderIDParameter = new ObjectParameter("PurchaseOrderID", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderDocumentDateParameter;
            if (purchaseOrderDocumentDate.HasValue)
            {
                purchaseOrderDocumentDateParameter = new ObjectParameter("PurchaseOrderDocumentDate", purchaseOrderDocumentDate);
            }
            else
            {
                purchaseOrderDocumentDateParameter = new ObjectParameter("PurchaseOrderDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter purchaseOrderStatusParameter;
            if (purchaseOrderStatus != null)
            {
                purchaseOrderStatusParameter = new ObjectParameter("PurchaseOrderStatus", purchaseOrderStatus);
            }
            else
            {
                purchaseOrderStatusParameter = new ObjectParameter("PurchaseOrderStatus", typeof(global::System.String));
            }
    
            ObjectParameter purchaseOrderNoteParameter;
            if (purchaseOrderNote != null)
            {
                purchaseOrderNoteParameter = new ObjectParameter("PurchaseOrderNote", purchaseOrderNote);
            }
            else
            {
                purchaseOrderNoteParameter = new ObjectParameter("PurchaseOrderNote", typeof(global::System.String));
            }
    
            ObjectParameter purchaseOrderLegalEntityParameter;
            if (purchaseOrderLegalEntity.HasValue)
            {
                purchaseOrderLegalEntityParameter = new ObjectParameter("PurchaseOrderLegalEntity", purchaseOrderLegalEntity);
            }
            else
            {
                purchaseOrderLegalEntityParameter = new ObjectParameter("PurchaseOrderLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderBusinessPartnerParameter;
            if (purchaseOrderBusinessPartner.HasValue)
            {
                purchaseOrderBusinessPartnerParameter = new ObjectParameter("PurchaseOrderBusinessPartner", purchaseOrderBusinessPartner);
            }
            else
            {
                purchaseOrderBusinessPartnerParameter = new ObjectParameter("PurchaseOrderBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderPeriodParameter;
            if (purchaseOrderPeriod.HasValue)
            {
                purchaseOrderPeriodParameter = new ObjectParameter("PurchaseOrderPeriod", purchaseOrderPeriod);
            }
            else
            {
                purchaseOrderPeriodParameter = new ObjectParameter("PurchaseOrderPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter purchaseOrderDocumentTypeParameter;
            if (purchaseOrderDocumentType.HasValue)
            {
                purchaseOrderDocumentTypeParameter = new ObjectParameter("PurchaseOrderDocumentType", purchaseOrderDocumentType);
            }
            else
            {
                purchaseOrderDocumentTypeParameter = new ObjectParameter("PurchaseOrderDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdatePurchaseOrder", purchaseOrderIDParameter, purchaseOrderDocumentDateParameter, purchaseOrderStatusParameter, purchaseOrderNoteParameter, purchaseOrderLegalEntityParameter, purchaseOrderBusinessPartnerParameter, purchaseOrderPeriodParameter, purchaseOrderDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="purchaseOrderDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        public int UpdatePurchaseOrderDetails(Nullable<global::System.Int32> purchaseOrderDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> productID, Nullable<global::System.Int32> taxeID)
        {
            ObjectParameter purchaseOrderDetailsIDParameter;
            if (purchaseOrderDetailsID.HasValue)
            {
                purchaseOrderDetailsIDParameter = new ObjectParameter("PurchaseOrderDetailsID", purchaseOrderDetailsID);
            }
            else
            {
                purchaseOrderDetailsIDParameter = new ObjectParameter("PurchaseOrderDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdatePurchaseOrderDetails", purchaseOrderDetailsIDParameter, quantityParameter, priceParameter, productIDParameter, taxeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestForQuoteID">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteDocumentDate">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteStatus">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteNote">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteLegalEntity">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="requestForQuotePeriod">No Metadata Documentation available.</param>
        /// <param name="requestForQuoteDocumentType">No Metadata Documentation available.</param>
        public int UpdateRequestForQuote(Nullable<global::System.Int32> requestForQuoteID, Nullable<global::System.DateTime> requestForQuoteDocumentDate, global::System.String requestForQuoteStatus, global::System.String requestForQuoteNote, Nullable<global::System.Int32> requestForQuoteLegalEntity, Nullable<global::System.Int32> requestForQuoteBusinessPartner, Nullable<global::System.Int32> requestForQuotePeriod, Nullable<global::System.Int32> requestForQuoteDocumentType)
        {
            ObjectParameter requestForQuoteIDParameter;
            if (requestForQuoteID.HasValue)
            {
                requestForQuoteIDParameter = new ObjectParameter("RequestForQuoteID", requestForQuoteID);
            }
            else
            {
                requestForQuoteIDParameter = new ObjectParameter("RequestForQuoteID", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuoteDocumentDateParameter;
            if (requestForQuoteDocumentDate.HasValue)
            {
                requestForQuoteDocumentDateParameter = new ObjectParameter("RequestForQuoteDocumentDate", requestForQuoteDocumentDate);
            }
            else
            {
                requestForQuoteDocumentDateParameter = new ObjectParameter("RequestForQuoteDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter requestForQuoteStatusParameter;
            if (requestForQuoteStatus != null)
            {
                requestForQuoteStatusParameter = new ObjectParameter("RequestForQuoteStatus", requestForQuoteStatus);
            }
            else
            {
                requestForQuoteStatusParameter = new ObjectParameter("RequestForQuoteStatus", typeof(global::System.String));
            }
    
            ObjectParameter requestForQuoteNoteParameter;
            if (requestForQuoteNote != null)
            {
                requestForQuoteNoteParameter = new ObjectParameter("RequestForQuoteNote", requestForQuoteNote);
            }
            else
            {
                requestForQuoteNoteParameter = new ObjectParameter("RequestForQuoteNote", typeof(global::System.String));
            }
    
            ObjectParameter requestForQuoteLegalEntityParameter;
            if (requestForQuoteLegalEntity.HasValue)
            {
                requestForQuoteLegalEntityParameter = new ObjectParameter("RequestForQuoteLegalEntity", requestForQuoteLegalEntity);
            }
            else
            {
                requestForQuoteLegalEntityParameter = new ObjectParameter("RequestForQuoteLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuoteBusinessPartnerParameter;
            if (requestForQuoteBusinessPartner.HasValue)
            {
                requestForQuoteBusinessPartnerParameter = new ObjectParameter("RequestForQuoteBusinessPartner", requestForQuoteBusinessPartner);
            }
            else
            {
                requestForQuoteBusinessPartnerParameter = new ObjectParameter("RequestForQuoteBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuotePeriodParameter;
            if (requestForQuotePeriod.HasValue)
            {
                requestForQuotePeriodParameter = new ObjectParameter("RequestForQuotePeriod", requestForQuotePeriod);
            }
            else
            {
                requestForQuotePeriodParameter = new ObjectParameter("RequestForQuotePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter requestForQuoteDocumentTypeParameter;
            if (requestForQuoteDocumentType.HasValue)
            {
                requestForQuoteDocumentTypeParameter = new ObjectParameter("RequestForQuoteDocumentType", requestForQuoteDocumentType);
            }
            else
            {
                requestForQuoteDocumentTypeParameter = new ObjectParameter("RequestForQuoteDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateRequestForQuote", requestForQuoteIDParameter, requestForQuoteDocumentDateParameter, requestForQuoteStatusParameter, requestForQuoteNoteParameter, requestForQuoteLegalEntityParameter, requestForQuoteBusinessPartnerParameter, requestForQuotePeriodParameter, requestForQuoteDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestForQuoteDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateRequestForQuoteDetails(Nullable<global::System.Int32> requestForQuoteDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter requestForQuoteDetailsIDParameter;
            if (requestForQuoteDetailsID.HasValue)
            {
                requestForQuoteDetailsIDParameter = new ObjectParameter("RequestForQuoteDetailsID", requestForQuoteDetailsID);
            }
            else
            {
                requestForQuoteDetailsIDParameter = new ObjectParameter("RequestForQuoteDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateRequestForQuoteDetails", requestForQuoteDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quoteID">No Metadata Documentation available.</param>
        public int DeleteQuote(Nullable<global::System.Int32> quoteID)
        {
            ObjectParameter quoteIDParameter;
            if (quoteID.HasValue)
            {
                quoteIDParameter = new ObjectParameter("QuoteID", quoteID);
            }
            else
            {
                quoteIDParameter = new ObjectParameter("QuoteID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteQuote", quoteIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quoteDetailsID">No Metadata Documentation available.</param>
        public int DeleteQuoteDetail(Nullable<global::System.Int32> quoteDetailsID)
        {
            ObjectParameter quoteDetailsIDParameter;
            if (quoteDetailsID.HasValue)
            {
                quoteDetailsIDParameter = new ObjectParameter("QuoteDetailsID", quoteDetailsID);
            }
            else
            {
                quoteDetailsIDParameter = new ObjectParameter("QuoteDetailsID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteQuoteDetail", quoteDetailsIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quoteDocumentDate">No Metadata Documentation available.</param>
        /// <param name="quoteStatus">No Metadata Documentation available.</param>
        /// <param name="quoteNote">No Metadata Documentation available.</param>
        /// <param name="quoteLegalEntity">No Metadata Documentation available.</param>
        /// <param name="quoteBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="quotePeriod">No Metadata Documentation available.</param>
        /// <param name="quoteDocumentType">No Metadata Documentation available.</param>
        public int InsertQuote(Nullable<global::System.DateTime> quoteDocumentDate, global::System.String quoteStatus, global::System.String quoteNote, Nullable<global::System.Int32> quoteLegalEntity, Nullable<global::System.Int32> quoteBusinessPartner, Nullable<global::System.Int32> quotePeriod, Nullable<global::System.Int32> quoteDocumentType)
        {
            ObjectParameter quoteDocumentDateParameter;
            if (quoteDocumentDate.HasValue)
            {
                quoteDocumentDateParameter = new ObjectParameter("QuoteDocumentDate", quoteDocumentDate);
            }
            else
            {
                quoteDocumentDateParameter = new ObjectParameter("QuoteDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter quoteStatusParameter;
            if (quoteStatus != null)
            {
                quoteStatusParameter = new ObjectParameter("QuoteStatus", quoteStatus);
            }
            else
            {
                quoteStatusParameter = new ObjectParameter("QuoteStatus", typeof(global::System.String));
            }
    
            ObjectParameter quoteNoteParameter;
            if (quoteNote != null)
            {
                quoteNoteParameter = new ObjectParameter("QuoteNote", quoteNote);
            }
            else
            {
                quoteNoteParameter = new ObjectParameter("QuoteNote", typeof(global::System.String));
            }
    
            ObjectParameter quoteLegalEntityParameter;
            if (quoteLegalEntity.HasValue)
            {
                quoteLegalEntityParameter = new ObjectParameter("QuoteLegalEntity", quoteLegalEntity);
            }
            else
            {
                quoteLegalEntityParameter = new ObjectParameter("QuoteLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteBusinessPartnerParameter;
            if (quoteBusinessPartner.HasValue)
            {
                quoteBusinessPartnerParameter = new ObjectParameter("QuoteBusinessPartner", quoteBusinessPartner);
            }
            else
            {
                quoteBusinessPartnerParameter = new ObjectParameter("QuoteBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter quotePeriodParameter;
            if (quotePeriod.HasValue)
            {
                quotePeriodParameter = new ObjectParameter("QuotePeriod", quotePeriod);
            }
            else
            {
                quotePeriodParameter = new ObjectParameter("QuotePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteDocumentTypeParameter;
            if (quoteDocumentType.HasValue)
            {
                quoteDocumentTypeParameter = new ObjectParameter("QuoteDocumentType", quoteDocumentType);
            }
            else
            {
                quoteDocumentTypeParameter = new ObjectParameter("QuoteDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertQuote", quoteDocumentDateParameter, quoteStatusParameter, quoteNoteParameter, quoteLegalEntityParameter, quoteBusinessPartnerParameter, quotePeriodParameter, quoteDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertQuoteDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertQuoteDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quoteID">No Metadata Documentation available.</param>
        /// <param name="quoteDocumentDate">No Metadata Documentation available.</param>
        /// <param name="quoteStatus">No Metadata Documentation available.</param>
        /// <param name="quoteNote">No Metadata Documentation available.</param>
        /// <param name="quoteLegalEntity">No Metadata Documentation available.</param>
        /// <param name="quoteBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="quotePeriod">No Metadata Documentation available.</param>
        /// <param name="quoteDocumentType">No Metadata Documentation available.</param>
        public int UpdateQuote(Nullable<global::System.Int32> quoteID, Nullable<global::System.DateTime> quoteDocumentDate, global::System.String quoteStatus, global::System.String quoteNote, Nullable<global::System.Int32> quoteLegalEntity, Nullable<global::System.Int32> quoteBusinessPartner, Nullable<global::System.Int32> quotePeriod, Nullable<global::System.Int32> quoteDocumentType)
        {
            ObjectParameter quoteIDParameter;
            if (quoteID.HasValue)
            {
                quoteIDParameter = new ObjectParameter("QuoteID", quoteID);
            }
            else
            {
                quoteIDParameter = new ObjectParameter("QuoteID", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteDocumentDateParameter;
            if (quoteDocumentDate.HasValue)
            {
                quoteDocumentDateParameter = new ObjectParameter("QuoteDocumentDate", quoteDocumentDate);
            }
            else
            {
                quoteDocumentDateParameter = new ObjectParameter("QuoteDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter quoteStatusParameter;
            if (quoteStatus != null)
            {
                quoteStatusParameter = new ObjectParameter("QuoteStatus", quoteStatus);
            }
            else
            {
                quoteStatusParameter = new ObjectParameter("QuoteStatus", typeof(global::System.String));
            }
    
            ObjectParameter quoteNoteParameter;
            if (quoteNote != null)
            {
                quoteNoteParameter = new ObjectParameter("QuoteNote", quoteNote);
            }
            else
            {
                quoteNoteParameter = new ObjectParameter("QuoteNote", typeof(global::System.String));
            }
    
            ObjectParameter quoteLegalEntityParameter;
            if (quoteLegalEntity.HasValue)
            {
                quoteLegalEntityParameter = new ObjectParameter("QuoteLegalEntity", quoteLegalEntity);
            }
            else
            {
                quoteLegalEntityParameter = new ObjectParameter("QuoteLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteBusinessPartnerParameter;
            if (quoteBusinessPartner.HasValue)
            {
                quoteBusinessPartnerParameter = new ObjectParameter("QuoteBusinessPartner", quoteBusinessPartner);
            }
            else
            {
                quoteBusinessPartnerParameter = new ObjectParameter("QuoteBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter quotePeriodParameter;
            if (quotePeriod.HasValue)
            {
                quotePeriodParameter = new ObjectParameter("QuotePeriod", quotePeriod);
            }
            else
            {
                quotePeriodParameter = new ObjectParameter("QuotePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteDocumentTypeParameter;
            if (quoteDocumentType.HasValue)
            {
                quoteDocumentTypeParameter = new ObjectParameter("QuoteDocumentType", quoteDocumentType);
            }
            else
            {
                quoteDocumentTypeParameter = new ObjectParameter("QuoteDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateQuote", quoteIDParameter, quoteDocumentDateParameter, quoteStatusParameter, quoteNoteParameter, quoteLegalEntityParameter, quoteBusinessPartnerParameter, quotePeriodParameter, quoteDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quoteDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateQuoteDetails(Nullable<global::System.Int32> quoteDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quoteDetailsIDParameter;
            if (quoteDetailsID.HasValue)
            {
                quoteDetailsIDParameter = new ObjectParameter("QuoteDetailsID", quoteDetailsID);
            }
            else
            {
                quoteDetailsIDParameter = new ObjectParameter("QuoteDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateQuoteDetails", quoteDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="budgetID">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="account">No Metadata Documentation available.</param>
        /// <param name="period">No Metadata Documentation available.</param>
        public int InsertBudgetDetails(Nullable<global::System.Int32> budgetID, Nullable<global::System.Decimal> amount, Nullable<global::System.Int32> account, Nullable<global::System.Int32> period)
        {
            ObjectParameter budgetIDParameter;
            if (budgetID.HasValue)
            {
                budgetIDParameter = new ObjectParameter("BudgetID", budgetID);
            }
            else
            {
                budgetIDParameter = new ObjectParameter("BudgetID", typeof(global::System.Int32));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter accountParameter;
            if (account.HasValue)
            {
                accountParameter = new ObjectParameter("Account", account);
            }
            else
            {
                accountParameter = new ObjectParameter("Account", typeof(global::System.Int32));
            }
    
            ObjectParameter periodParameter;
            if (period.HasValue)
            {
                periodParameter = new ObjectParameter("Period", period);
            }
            else
            {
                periodParameter = new ObjectParameter("Period", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertBudgetDetails", budgetIDParameter, amountParameter, accountParameter, periodParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="journalID">No Metadata Documentation available.</param>
        /// <param name="debitCreditFlag">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="account">No Metadata Documentation available.</param>
        public int InsertJournalDetails(Nullable<global::System.Int32> journalID, global::System.String debitCreditFlag, Nullable<global::System.Decimal> amount, Nullable<global::System.Int32> account)
        {
            ObjectParameter journalIDParameter;
            if (journalID.HasValue)
            {
                journalIDParameter = new ObjectParameter("JournalID", journalID);
            }
            else
            {
                journalIDParameter = new ObjectParameter("JournalID", typeof(global::System.Int32));
            }
    
            ObjectParameter debitCreditFlagParameter;
            if (debitCreditFlag != null)
            {
                debitCreditFlagParameter = new ObjectParameter("DebitCreditFlag", debitCreditFlag);
            }
            else
            {
                debitCreditFlagParameter = new ObjectParameter("DebitCreditFlag", typeof(global::System.String));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter accountParameter;
            if (account.HasValue)
            {
                accountParameter = new ObjectParameter("Account", account);
            }
            else
            {
                accountParameter = new ObjectParameter("Account", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertJournalDetails", journalIDParameter, debitCreditFlagParameter, amountParameter, accountParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerID">No Metadata Documentation available.</param>
        public int DeleteBusinessPartner(Nullable<global::System.Int32> businessPartnerID)
        {
            ObjectParameter businessPartnerIDParameter;
            if (businessPartnerID.HasValue)
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", businessPartnerID);
            }
            else
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBusinessPartner", businessPartnerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerAddressID">No Metadata Documentation available.</param>
        public int DeleteBusinessPartnerAddress(Nullable<global::System.Int32> businessPartnerAddressID)
        {
            ObjectParameter businessPartnerAddressIDParameter;
            if (businessPartnerAddressID.HasValue)
            {
                businessPartnerAddressIDParameter = new ObjectParameter("BusinessPartnerAddressID", businessPartnerAddressID);
            }
            else
            {
                businessPartnerAddressIDParameter = new ObjectParameter("BusinessPartnerAddressID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBusinessPartnerAddress", businessPartnerAddressIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerCode">No Metadata Documentation available.</param>
        /// <param name="businessPartnerName">No Metadata Documentation available.</param>
        /// <param name="businessPartnerType">No Metadata Documentation available.</param>
        /// <param name="businessPartnerLegalEntity">No Metadata Documentation available.</param>
        public int InsertBusinessPartner(global::System.String businessPartnerCode, global::System.String businessPartnerName, global::System.String businessPartnerType, Nullable<global::System.Int32> businessPartnerLegalEntity)
        {
            ObjectParameter businessPartnerCodeParameter;
            if (businessPartnerCode != null)
            {
                businessPartnerCodeParameter = new ObjectParameter("BusinessPartnerCode", businessPartnerCode);
            }
            else
            {
                businessPartnerCodeParameter = new ObjectParameter("BusinessPartnerCode", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerNameParameter;
            if (businessPartnerName != null)
            {
                businessPartnerNameParameter = new ObjectParameter("BusinessPartnerName", businessPartnerName);
            }
            else
            {
                businessPartnerNameParameter = new ObjectParameter("BusinessPartnerName", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerTypeParameter;
            if (businessPartnerType != null)
            {
                businessPartnerTypeParameter = new ObjectParameter("BusinessPartnerType", businessPartnerType);
            }
            else
            {
                businessPartnerTypeParameter = new ObjectParameter("BusinessPartnerType", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerLegalEntityParameter;
            if (businessPartnerLegalEntity.HasValue)
            {
                businessPartnerLegalEntityParameter = new ObjectParameter("BusinessPartnerLegalEntity", businessPartnerLegalEntity);
            }
            else
            {
                businessPartnerLegalEntityParameter = new ObjectParameter("BusinessPartnerLegalEntity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertBusinessPartner", businessPartnerCodeParameter, businessPartnerNameParameter, businessPartnerTypeParameter, businessPartnerLegalEntityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerAddressType">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressCity">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAdressStreet">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressStateRegion">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressCountry">No Metadata Documentation available.</param>
        /// <param name="businessPartnerID">No Metadata Documentation available.</param>
        public int InsertBusinessPartnerAddress(global::System.String businessPartnerAddressType, global::System.String businessPartnerAddressCity, global::System.String businessPartnerAdressStreet, global::System.String businessPartnerAddressStateRegion, global::System.String businessPartnerAddressCountry, Nullable<global::System.Int32> businessPartnerID)
        {
            ObjectParameter businessPartnerAddressTypeParameter;
            if (businessPartnerAddressType != null)
            {
                businessPartnerAddressTypeParameter = new ObjectParameter("BusinessPartnerAddressType", businessPartnerAddressType);
            }
            else
            {
                businessPartnerAddressTypeParameter = new ObjectParameter("BusinessPartnerAddressType", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressCityParameter;
            if (businessPartnerAddressCity != null)
            {
                businessPartnerAddressCityParameter = new ObjectParameter("BusinessPartnerAddressCity", businessPartnerAddressCity);
            }
            else
            {
                businessPartnerAddressCityParameter = new ObjectParameter("BusinessPartnerAddressCity", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAdressStreetParameter;
            if (businessPartnerAdressStreet != null)
            {
                businessPartnerAdressStreetParameter = new ObjectParameter("BusinessPartnerAdressStreet", businessPartnerAdressStreet);
            }
            else
            {
                businessPartnerAdressStreetParameter = new ObjectParameter("BusinessPartnerAdressStreet", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressStateRegionParameter;
            if (businessPartnerAddressStateRegion != null)
            {
                businessPartnerAddressStateRegionParameter = new ObjectParameter("BusinessPartnerAddressStateRegion", businessPartnerAddressStateRegion);
            }
            else
            {
                businessPartnerAddressStateRegionParameter = new ObjectParameter("BusinessPartnerAddressStateRegion", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressCountryParameter;
            if (businessPartnerAddressCountry != null)
            {
                businessPartnerAddressCountryParameter = new ObjectParameter("BusinessPartnerAddressCountry", businessPartnerAddressCountry);
            }
            else
            {
                businessPartnerAddressCountryParameter = new ObjectParameter("BusinessPartnerAddressCountry", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerIDParameter;
            if (businessPartnerID.HasValue)
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", businessPartnerID);
            }
            else
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertBusinessPartnerAddress", businessPartnerAddressTypeParameter, businessPartnerAddressCityParameter, businessPartnerAdressStreetParameter, businessPartnerAddressStateRegionParameter, businessPartnerAddressCountryParameter, businessPartnerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerID">No Metadata Documentation available.</param>
        /// <param name="businessPartnerCode">No Metadata Documentation available.</param>
        /// <param name="businessPartnerName">No Metadata Documentation available.</param>
        /// <param name="businessPartnerType">No Metadata Documentation available.</param>
        /// <param name="businessPartnerLegalEntity">No Metadata Documentation available.</param>
        public int UpdateBusinessPartner(Nullable<global::System.Int32> businessPartnerID, global::System.String businessPartnerCode, global::System.String businessPartnerName, global::System.String businessPartnerType, Nullable<global::System.Int32> businessPartnerLegalEntity)
        {
            ObjectParameter businessPartnerIDParameter;
            if (businessPartnerID.HasValue)
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", businessPartnerID);
            }
            else
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", typeof(global::System.Int32));
            }
    
            ObjectParameter businessPartnerCodeParameter;
            if (businessPartnerCode != null)
            {
                businessPartnerCodeParameter = new ObjectParameter("BusinessPartnerCode", businessPartnerCode);
            }
            else
            {
                businessPartnerCodeParameter = new ObjectParameter("BusinessPartnerCode", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerNameParameter;
            if (businessPartnerName != null)
            {
                businessPartnerNameParameter = new ObjectParameter("BusinessPartnerName", businessPartnerName);
            }
            else
            {
                businessPartnerNameParameter = new ObjectParameter("BusinessPartnerName", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerTypeParameter;
            if (businessPartnerType != null)
            {
                businessPartnerTypeParameter = new ObjectParameter("BusinessPartnerType", businessPartnerType);
            }
            else
            {
                businessPartnerTypeParameter = new ObjectParameter("BusinessPartnerType", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerLegalEntityParameter;
            if (businessPartnerLegalEntity.HasValue)
            {
                businessPartnerLegalEntityParameter = new ObjectParameter("BusinessPartnerLegalEntity", businessPartnerLegalEntity);
            }
            else
            {
                businessPartnerLegalEntityParameter = new ObjectParameter("BusinessPartnerLegalEntity", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateBusinessPartner", businessPartnerIDParameter, businessPartnerCodeParameter, businessPartnerNameParameter, businessPartnerTypeParameter, businessPartnerLegalEntityParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="businessPartnerAddressID">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressType">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressCity">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAdressStreet">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressStateRegion">No Metadata Documentation available.</param>
        /// <param name="businessPartnerAddressCountry">No Metadata Documentation available.</param>
        /// <param name="businessPartnerID">No Metadata Documentation available.</param>
        public int UpdateBusinessPartnerAddress(Nullable<global::System.Int32> businessPartnerAddressID, global::System.String businessPartnerAddressType, global::System.String businessPartnerAddressCity, global::System.String businessPartnerAdressStreet, global::System.String businessPartnerAddressStateRegion, global::System.String businessPartnerAddressCountry, Nullable<global::System.Int32> businessPartnerID)
        {
            ObjectParameter businessPartnerAddressIDParameter;
            if (businessPartnerAddressID.HasValue)
            {
                businessPartnerAddressIDParameter = new ObjectParameter("BusinessPartnerAddressID", businessPartnerAddressID);
            }
            else
            {
                businessPartnerAddressIDParameter = new ObjectParameter("BusinessPartnerAddressID", typeof(global::System.Int32));
            }
    
            ObjectParameter businessPartnerAddressTypeParameter;
            if (businessPartnerAddressType != null)
            {
                businessPartnerAddressTypeParameter = new ObjectParameter("BusinessPartnerAddressType", businessPartnerAddressType);
            }
            else
            {
                businessPartnerAddressTypeParameter = new ObjectParameter("BusinessPartnerAddressType", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressCityParameter;
            if (businessPartnerAddressCity != null)
            {
                businessPartnerAddressCityParameter = new ObjectParameter("BusinessPartnerAddressCity", businessPartnerAddressCity);
            }
            else
            {
                businessPartnerAddressCityParameter = new ObjectParameter("BusinessPartnerAddressCity", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAdressStreetParameter;
            if (businessPartnerAdressStreet != null)
            {
                businessPartnerAdressStreetParameter = new ObjectParameter("BusinessPartnerAdressStreet", businessPartnerAdressStreet);
            }
            else
            {
                businessPartnerAdressStreetParameter = new ObjectParameter("BusinessPartnerAdressStreet", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressStateRegionParameter;
            if (businessPartnerAddressStateRegion != null)
            {
                businessPartnerAddressStateRegionParameter = new ObjectParameter("BusinessPartnerAddressStateRegion", businessPartnerAddressStateRegion);
            }
            else
            {
                businessPartnerAddressStateRegionParameter = new ObjectParameter("BusinessPartnerAddressStateRegion", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerAddressCountryParameter;
            if (businessPartnerAddressCountry != null)
            {
                businessPartnerAddressCountryParameter = new ObjectParameter("BusinessPartnerAddressCountry", businessPartnerAddressCountry);
            }
            else
            {
                businessPartnerAddressCountryParameter = new ObjectParameter("BusinessPartnerAddressCountry", typeof(global::System.String));
            }
    
            ObjectParameter businessPartnerIDParameter;
            if (businessPartnerID.HasValue)
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", businessPartnerID);
            }
            else
            {
                businessPartnerIDParameter = new ObjectParameter("BusinessPartnerID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateBusinessPartnerAddress", businessPartnerAddressIDParameter, businessPartnerAddressTypeParameter, businessPartnerAddressCityParameter, businessPartnerAdressStreetParameter, businessPartnerAddressStateRegionParameter, businessPartnerAddressCountryParameter, businessPartnerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="addressID">No Metadata Documentation available.</param>
        public int DeleteAddress(Nullable<global::System.Int32> addressID)
        {
            ObjectParameter addressIDParameter;
            if (addressID.HasValue)
            {
                addressIDParameter = new ObjectParameter("AddressID", addressID);
            }
            else
            {
                addressIDParameter = new ObjectParameter("AddressID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteAddress", addressIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bankID">No Metadata Documentation available.</param>
        public int DeleteBank(Nullable<global::System.Int32> bankID)
        {
            ObjectParameter bankIDParameter;
            if (bankID.HasValue)
            {
                bankIDParameter = new ObjectParameter("BankID", bankID);
            }
            else
            {
                bankIDParameter = new ObjectParameter("BankID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteBank", bankIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="legalEntityID">No Metadata Documentation available.</param>
        public int DeleteLegalEntity(Nullable<global::System.Int32> legalEntityID)
        {
            ObjectParameter legalEntityIDParameter;
            if (legalEntityID.HasValue)
            {
                legalEntityIDParameter = new ObjectParameter("LegalEntityID", legalEntityID);
            }
            else
            {
                legalEntityIDParameter = new ObjectParameter("LegalEntityID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteLegalEntity", legalEntityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="addressType">No Metadata Documentation available.</param>
        /// <param name="addressCity">No Metadata Documentation available.</param>
        /// <param name="adressStreet">No Metadata Documentation available.</param>
        /// <param name="addressStateRegion">No Metadata Documentation available.</param>
        /// <param name="addressCountry">No Metadata Documentation available.</param>
        public int InsertAddress(global::System.String addressType, global::System.String addressCity, global::System.String adressStreet, global::System.String addressStateRegion, global::System.String addressCountry)
        {
            ObjectParameter addressTypeParameter;
            if (addressType != null)
            {
                addressTypeParameter = new ObjectParameter("AddressType", addressType);
            }
            else
            {
                addressTypeParameter = new ObjectParameter("AddressType", typeof(global::System.String));
            }
    
            ObjectParameter addressCityParameter;
            if (addressCity != null)
            {
                addressCityParameter = new ObjectParameter("AddressCity", addressCity);
            }
            else
            {
                addressCityParameter = new ObjectParameter("AddressCity", typeof(global::System.String));
            }
    
            ObjectParameter adressStreetParameter;
            if (adressStreet != null)
            {
                adressStreetParameter = new ObjectParameter("AdressStreet", adressStreet);
            }
            else
            {
                adressStreetParameter = new ObjectParameter("AdressStreet", typeof(global::System.String));
            }
    
            ObjectParameter addressStateRegionParameter;
            if (addressStateRegion != null)
            {
                addressStateRegionParameter = new ObjectParameter("AddressStateRegion", addressStateRegion);
            }
            else
            {
                addressStateRegionParameter = new ObjectParameter("AddressStateRegion", typeof(global::System.String));
            }
    
            ObjectParameter addressCountryParameter;
            if (addressCountry != null)
            {
                addressCountryParameter = new ObjectParameter("AddressCountry", addressCountry);
            }
            else
            {
                addressCountryParameter = new ObjectParameter("AddressCountry", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertAddress", addressTypeParameter, addressCityParameter, adressStreetParameter, addressStateRegionParameter, addressCountryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bankCode">No Metadata Documentation available.</param>
        /// <param name="bankName">No Metadata Documentation available.</param>
        /// <param name="bankTerritory">No Metadata Documentation available.</param>
        public int InsertBank(global::System.String bankCode, global::System.String bankName, global::System.String bankTerritory)
        {
            ObjectParameter bankCodeParameter;
            if (bankCode != null)
            {
                bankCodeParameter = new ObjectParameter("BankCode", bankCode);
            }
            else
            {
                bankCodeParameter = new ObjectParameter("BankCode", typeof(global::System.String));
            }
    
            ObjectParameter bankNameParameter;
            if (bankName != null)
            {
                bankNameParameter = new ObjectParameter("BankName", bankName);
            }
            else
            {
                bankNameParameter = new ObjectParameter("BankName", typeof(global::System.String));
            }
    
            ObjectParameter bankTerritoryParameter;
            if (bankTerritory != null)
            {
                bankTerritoryParameter = new ObjectParameter("BankTerritory", bankTerritory);
            }
            else
            {
                bankTerritoryParameter = new ObjectParameter("BankTerritory", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertBank", bankCodeParameter, bankNameParameter, bankTerritoryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="legalEntityName">No Metadata Documentation available.</param>
        /// <param name="legalEntityRegistrationID">No Metadata Documentation available.</param>
        /// <param name="legalEntityFiscalID">No Metadata Documentation available.</param>
        /// <param name="legalEntityChart">No Metadata Documentation available.</param>
        /// <param name="legalEntityHeadQuarters">No Metadata Documentation available.</param>
        public int InsertLegalEntity(global::System.String legalEntityName, global::System.String legalEntityRegistrationID, global::System.String legalEntityFiscalID, Nullable<global::System.Int32> legalEntityChart, Nullable<global::System.Int32> legalEntityHeadQuarters)
        {
            ObjectParameter legalEntityNameParameter;
            if (legalEntityName != null)
            {
                legalEntityNameParameter = new ObjectParameter("LegalEntityName", legalEntityName);
            }
            else
            {
                legalEntityNameParameter = new ObjectParameter("LegalEntityName", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityRegistrationIDParameter;
            if (legalEntityRegistrationID != null)
            {
                legalEntityRegistrationIDParameter = new ObjectParameter("LegalEntityRegistrationID", legalEntityRegistrationID);
            }
            else
            {
                legalEntityRegistrationIDParameter = new ObjectParameter("LegalEntityRegistrationID", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityFiscalIDParameter;
            if (legalEntityFiscalID != null)
            {
                legalEntityFiscalIDParameter = new ObjectParameter("LegalEntityFiscalID", legalEntityFiscalID);
            }
            else
            {
                legalEntityFiscalIDParameter = new ObjectParameter("LegalEntityFiscalID", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityChartParameter;
            if (legalEntityChart.HasValue)
            {
                legalEntityChartParameter = new ObjectParameter("LegalEntityChart", legalEntityChart);
            }
            else
            {
                legalEntityChartParameter = new ObjectParameter("LegalEntityChart", typeof(global::System.Int32));
            }
    
            ObjectParameter legalEntityHeadQuartersParameter;
            if (legalEntityHeadQuarters.HasValue)
            {
                legalEntityHeadQuartersParameter = new ObjectParameter("LegalEntityHeadQuarters", legalEntityHeadQuarters);
            }
            else
            {
                legalEntityHeadQuartersParameter = new ObjectParameter("LegalEntityHeadQuarters", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertLegalEntity", legalEntityNameParameter, legalEntityRegistrationIDParameter, legalEntityFiscalIDParameter, legalEntityChartParameter, legalEntityHeadQuartersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="addressID">No Metadata Documentation available.</param>
        /// <param name="addressType">No Metadata Documentation available.</param>
        /// <param name="addressCity">No Metadata Documentation available.</param>
        /// <param name="adressStreet">No Metadata Documentation available.</param>
        /// <param name="addressStateRegion">No Metadata Documentation available.</param>
        /// <param name="addressCountry">No Metadata Documentation available.</param>
        public int UpdateAddress(Nullable<global::System.Int32> addressID, global::System.String addressType, global::System.String addressCity, global::System.String adressStreet, global::System.String addressStateRegion, global::System.String addressCountry)
        {
            ObjectParameter addressIDParameter;
            if (addressID.HasValue)
            {
                addressIDParameter = new ObjectParameter("AddressID", addressID);
            }
            else
            {
                addressIDParameter = new ObjectParameter("AddressID", typeof(global::System.Int32));
            }
    
            ObjectParameter addressTypeParameter;
            if (addressType != null)
            {
                addressTypeParameter = new ObjectParameter("AddressType", addressType);
            }
            else
            {
                addressTypeParameter = new ObjectParameter("AddressType", typeof(global::System.String));
            }
    
            ObjectParameter addressCityParameter;
            if (addressCity != null)
            {
                addressCityParameter = new ObjectParameter("AddressCity", addressCity);
            }
            else
            {
                addressCityParameter = new ObjectParameter("AddressCity", typeof(global::System.String));
            }
    
            ObjectParameter adressStreetParameter;
            if (adressStreet != null)
            {
                adressStreetParameter = new ObjectParameter("AdressStreet", adressStreet);
            }
            else
            {
                adressStreetParameter = new ObjectParameter("AdressStreet", typeof(global::System.String));
            }
    
            ObjectParameter addressStateRegionParameter;
            if (addressStateRegion != null)
            {
                addressStateRegionParameter = new ObjectParameter("AddressStateRegion", addressStateRegion);
            }
            else
            {
                addressStateRegionParameter = new ObjectParameter("AddressStateRegion", typeof(global::System.String));
            }
    
            ObjectParameter addressCountryParameter;
            if (addressCountry != null)
            {
                addressCountryParameter = new ObjectParameter("AddressCountry", addressCountry);
            }
            else
            {
                addressCountryParameter = new ObjectParameter("AddressCountry", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateAddress", addressIDParameter, addressTypeParameter, addressCityParameter, adressStreetParameter, addressStateRegionParameter, addressCountryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bankID">No Metadata Documentation available.</param>
        /// <param name="bankCode">No Metadata Documentation available.</param>
        /// <param name="bankName">No Metadata Documentation available.</param>
        /// <param name="bankTerritory">No Metadata Documentation available.</param>
        public int UpdateBank(Nullable<global::System.Int32> bankID, global::System.String bankCode, global::System.String bankName, global::System.String bankTerritory)
        {
            ObjectParameter bankIDParameter;
            if (bankID.HasValue)
            {
                bankIDParameter = new ObjectParameter("BankID", bankID);
            }
            else
            {
                bankIDParameter = new ObjectParameter("BankID", typeof(global::System.Int32));
            }
    
            ObjectParameter bankCodeParameter;
            if (bankCode != null)
            {
                bankCodeParameter = new ObjectParameter("BankCode", bankCode);
            }
            else
            {
                bankCodeParameter = new ObjectParameter("BankCode", typeof(global::System.String));
            }
    
            ObjectParameter bankNameParameter;
            if (bankName != null)
            {
                bankNameParameter = new ObjectParameter("BankName", bankName);
            }
            else
            {
                bankNameParameter = new ObjectParameter("BankName", typeof(global::System.String));
            }
    
            ObjectParameter bankTerritoryParameter;
            if (bankTerritory != null)
            {
                bankTerritoryParameter = new ObjectParameter("BankTerritory", bankTerritory);
            }
            else
            {
                bankTerritoryParameter = new ObjectParameter("BankTerritory", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateBank", bankIDParameter, bankCodeParameter, bankNameParameter, bankTerritoryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="legalEntityID">No Metadata Documentation available.</param>
        /// <param name="legalEntityName">No Metadata Documentation available.</param>
        /// <param name="legalEntityRegistrationID">No Metadata Documentation available.</param>
        /// <param name="legalEntityFiscalID">No Metadata Documentation available.</param>
        /// <param name="legalEntityChart">No Metadata Documentation available.</param>
        /// <param name="legalEntityHeadQuarters">No Metadata Documentation available.</param>
        public int UpdateLegalEntity(Nullable<global::System.Int32> legalEntityID, global::System.String legalEntityName, global::System.String legalEntityRegistrationID, global::System.String legalEntityFiscalID, Nullable<global::System.Int32> legalEntityChart, Nullable<global::System.Int32> legalEntityHeadQuarters)
        {
            ObjectParameter legalEntityIDParameter;
            if (legalEntityID.HasValue)
            {
                legalEntityIDParameter = new ObjectParameter("LegalEntityID", legalEntityID);
            }
            else
            {
                legalEntityIDParameter = new ObjectParameter("LegalEntityID", typeof(global::System.Int32));
            }
    
            ObjectParameter legalEntityNameParameter;
            if (legalEntityName != null)
            {
                legalEntityNameParameter = new ObjectParameter("LegalEntityName", legalEntityName);
            }
            else
            {
                legalEntityNameParameter = new ObjectParameter("LegalEntityName", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityRegistrationIDParameter;
            if (legalEntityRegistrationID != null)
            {
                legalEntityRegistrationIDParameter = new ObjectParameter("LegalEntityRegistrationID", legalEntityRegistrationID);
            }
            else
            {
                legalEntityRegistrationIDParameter = new ObjectParameter("LegalEntityRegistrationID", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityFiscalIDParameter;
            if (legalEntityFiscalID != null)
            {
                legalEntityFiscalIDParameter = new ObjectParameter("LegalEntityFiscalID", legalEntityFiscalID);
            }
            else
            {
                legalEntityFiscalIDParameter = new ObjectParameter("LegalEntityFiscalID", typeof(global::System.String));
            }
    
            ObjectParameter legalEntityChartParameter;
            if (legalEntityChart.HasValue)
            {
                legalEntityChartParameter = new ObjectParameter("LegalEntityChart", legalEntityChart);
            }
            else
            {
                legalEntityChartParameter = new ObjectParameter("LegalEntityChart", typeof(global::System.Int32));
            }
    
            ObjectParameter legalEntityHeadQuartersParameter;
            if (legalEntityHeadQuarters.HasValue)
            {
                legalEntityHeadQuartersParameter = new ObjectParameter("LegalEntityHeadQuarters", legalEntityHeadQuarters);
            }
            else
            {
                legalEntityHeadQuartersParameter = new ObjectParameter("LegalEntityHeadQuarters", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateLegalEntity", legalEntityIDParameter, legalEntityNameParameter, legalEntityRegistrationIDParameter, legalEntityFiscalIDParameter, legalEntityChartParameter, legalEntityHeadQuartersParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceID">No Metadata Documentation available.</param>
        public int DeleteInvoice(Nullable<global::System.Int32> invoiceID)
        {
            ObjectParameter invoiceIDParameter;
            if (invoiceID.HasValue)
            {
                invoiceIDParameter = new ObjectParameter("InvoiceID", invoiceID);
            }
            else
            {
                invoiceIDParameter = new ObjectParameter("InvoiceID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteInvoice", invoiceIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceDetailsID">No Metadata Documentation available.</param>
        public int DeleteInvoiceDetail(Nullable<global::System.Int32> invoiceDetailsID)
        {
            ObjectParameter invoiceDetailsIDParameter;
            if (invoiceDetailsID.HasValue)
            {
                invoiceDetailsIDParameter = new ObjectParameter("InvoiceDetailsID", invoiceDetailsID);
            }
            else
            {
                invoiceDetailsIDParameter = new ObjectParameter("InvoiceDetailsID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteInvoiceDetail", invoiceDetailsIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleOrderID">No Metadata Documentation available.</param>
        public int DeleteSaleOrder(Nullable<global::System.Int32> saleOrderID)
        {
            ObjectParameter saleOrderIDParameter;
            if (saleOrderID.HasValue)
            {
                saleOrderIDParameter = new ObjectParameter("SaleOrderID", saleOrderID);
            }
            else
            {
                saleOrderIDParameter = new ObjectParameter("SaleOrderID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteSaleOrder", saleOrderIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleOrderDetailsID">No Metadata Documentation available.</param>
        public int DeleteSaleOrderDetail(Nullable<global::System.Int32> saleOrderDetailsID)
        {
            ObjectParameter saleOrderDetailsIDParameter;
            if (saleOrderDetailsID.HasValue)
            {
                saleOrderDetailsIDParameter = new ObjectParameter("SaleOrderDetailsID", saleOrderDetailsID);
            }
            else
            {
                saleOrderDetailsIDParameter = new ObjectParameter("SaleOrderDetailsID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteSaleOrderDetail", saleOrderDetailsIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shippingID">No Metadata Documentation available.</param>
        public int DeleteShipping(Nullable<global::System.Int32> shippingID)
        {
            ObjectParameter shippingIDParameter;
            if (shippingID.HasValue)
            {
                shippingIDParameter = new ObjectParameter("ShippingID", shippingID);
            }
            else
            {
                shippingIDParameter = new ObjectParameter("ShippingID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteShipping", shippingIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shippingDetailsID">No Metadata Documentation available.</param>
        public int DeleteShippingDetail(Nullable<global::System.Int32> shippingDetailsID)
        {
            ObjectParameter shippingDetailsIDParameter;
            if (shippingDetailsID.HasValue)
            {
                shippingDetailsIDParameter = new ObjectParameter("ShippingDetailsID", shippingDetailsID);
            }
            else
            {
                shippingDetailsIDParameter = new ObjectParameter("ShippingDetailsID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteShippingDetail", shippingDetailsIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceDocumentDate">No Metadata Documentation available.</param>
        /// <param name="invoiceStatus">No Metadata Documentation available.</param>
        /// <param name="invoiceNote">No Metadata Documentation available.</param>
        /// <param name="invoiceLegalEntity">No Metadata Documentation available.</param>
        /// <param name="invoiceBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="invoicePeriod">No Metadata Documentation available.</param>
        /// <param name="invoiceDocumentType">No Metadata Documentation available.</param>
        public int InsertInvoice(Nullable<global::System.DateTime> invoiceDocumentDate, global::System.String invoiceStatus, global::System.String invoiceNote, Nullable<global::System.Int32> invoiceLegalEntity, Nullable<global::System.Int32> invoiceBusinessPartner, Nullable<global::System.Int32> invoicePeriod, Nullable<global::System.Int32> invoiceDocumentType)
        {
            ObjectParameter invoiceDocumentDateParameter;
            if (invoiceDocumentDate.HasValue)
            {
                invoiceDocumentDateParameter = new ObjectParameter("InvoiceDocumentDate", invoiceDocumentDate);
            }
            else
            {
                invoiceDocumentDateParameter = new ObjectParameter("InvoiceDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter invoiceStatusParameter;
            if (invoiceStatus != null)
            {
                invoiceStatusParameter = new ObjectParameter("InvoiceStatus", invoiceStatus);
            }
            else
            {
                invoiceStatusParameter = new ObjectParameter("InvoiceStatus", typeof(global::System.String));
            }
    
            ObjectParameter invoiceNoteParameter;
            if (invoiceNote != null)
            {
                invoiceNoteParameter = new ObjectParameter("InvoiceNote", invoiceNote);
            }
            else
            {
                invoiceNoteParameter = new ObjectParameter("InvoiceNote", typeof(global::System.String));
            }
    
            ObjectParameter invoiceLegalEntityParameter;
            if (invoiceLegalEntity.HasValue)
            {
                invoiceLegalEntityParameter = new ObjectParameter("InvoiceLegalEntity", invoiceLegalEntity);
            }
            else
            {
                invoiceLegalEntityParameter = new ObjectParameter("InvoiceLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter invoiceBusinessPartnerParameter;
            if (invoiceBusinessPartner.HasValue)
            {
                invoiceBusinessPartnerParameter = new ObjectParameter("InvoiceBusinessPartner", invoiceBusinessPartner);
            }
            else
            {
                invoiceBusinessPartnerParameter = new ObjectParameter("InvoiceBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter invoicePeriodParameter;
            if (invoicePeriod.HasValue)
            {
                invoicePeriodParameter = new ObjectParameter("InvoicePeriod", invoicePeriod);
            }
            else
            {
                invoicePeriodParameter = new ObjectParameter("InvoicePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter invoiceDocumentTypeParameter;
            if (invoiceDocumentType.HasValue)
            {
                invoiceDocumentTypeParameter = new ObjectParameter("InvoiceDocumentType", invoiceDocumentType);
            }
            else
            {
                invoiceDocumentTypeParameter = new ObjectParameter("InvoiceDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertInvoice", invoiceDocumentDateParameter, invoiceStatusParameter, invoiceNoteParameter, invoiceLegalEntityParameter, invoiceBusinessPartnerParameter, invoicePeriodParameter, invoiceDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertInvoiceDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertInvoiceDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleOrderDocumentDate">No Metadata Documentation available.</param>
        /// <param name="saleOrderStatus">No Metadata Documentation available.</param>
        /// <param name="saleOrderNote">No Metadata Documentation available.</param>
        /// <param name="saleOrderLegalEntity">No Metadata Documentation available.</param>
        /// <param name="saleOrderBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="saleOrderPeriod">No Metadata Documentation available.</param>
        /// <param name="saleOrderDocumentType">No Metadata Documentation available.</param>
        public int InsertSaleOrder(Nullable<global::System.DateTime> saleOrderDocumentDate, global::System.String saleOrderStatus, global::System.String saleOrderNote, Nullable<global::System.Int32> saleOrderLegalEntity, Nullable<global::System.Int32> saleOrderBusinessPartner, Nullable<global::System.Int32> saleOrderPeriod, Nullable<global::System.Int32> saleOrderDocumentType)
        {
            ObjectParameter saleOrderDocumentDateParameter;
            if (saleOrderDocumentDate.HasValue)
            {
                saleOrderDocumentDateParameter = new ObjectParameter("SaleOrderDocumentDate", saleOrderDocumentDate);
            }
            else
            {
                saleOrderDocumentDateParameter = new ObjectParameter("SaleOrderDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter saleOrderStatusParameter;
            if (saleOrderStatus != null)
            {
                saleOrderStatusParameter = new ObjectParameter("SaleOrderStatus", saleOrderStatus);
            }
            else
            {
                saleOrderStatusParameter = new ObjectParameter("SaleOrderStatus", typeof(global::System.String));
            }
    
            ObjectParameter saleOrderNoteParameter;
            if (saleOrderNote != null)
            {
                saleOrderNoteParameter = new ObjectParameter("SaleOrderNote", saleOrderNote);
            }
            else
            {
                saleOrderNoteParameter = new ObjectParameter("SaleOrderNote", typeof(global::System.String));
            }
    
            ObjectParameter saleOrderLegalEntityParameter;
            if (saleOrderLegalEntity.HasValue)
            {
                saleOrderLegalEntityParameter = new ObjectParameter("SaleOrderLegalEntity", saleOrderLegalEntity);
            }
            else
            {
                saleOrderLegalEntityParameter = new ObjectParameter("SaleOrderLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderBusinessPartnerParameter;
            if (saleOrderBusinessPartner.HasValue)
            {
                saleOrderBusinessPartnerParameter = new ObjectParameter("SaleOrderBusinessPartner", saleOrderBusinessPartner);
            }
            else
            {
                saleOrderBusinessPartnerParameter = new ObjectParameter("SaleOrderBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderPeriodParameter;
            if (saleOrderPeriod.HasValue)
            {
                saleOrderPeriodParameter = new ObjectParameter("SaleOrderPeriod", saleOrderPeriod);
            }
            else
            {
                saleOrderPeriodParameter = new ObjectParameter("SaleOrderPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderDocumentTypeParameter;
            if (saleOrderDocumentType.HasValue)
            {
                saleOrderDocumentTypeParameter = new ObjectParameter("SaleOrderDocumentType", saleOrderDocumentType);
            }
            else
            {
                saleOrderDocumentTypeParameter = new ObjectParameter("SaleOrderDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertSaleOrder", saleOrderDocumentDateParameter, saleOrderStatusParameter, saleOrderNoteParameter, saleOrderLegalEntityParameter, saleOrderBusinessPartnerParameter, saleOrderPeriodParameter, saleOrderDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertSaleOrderDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertSaleOrderDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shippingDocumentDate">No Metadata Documentation available.</param>
        /// <param name="shippingStatus">No Metadata Documentation available.</param>
        /// <param name="shippingNote">No Metadata Documentation available.</param>
        /// <param name="shippingLegalEntity">No Metadata Documentation available.</param>
        /// <param name="shippingBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="shippingrPeriod">No Metadata Documentation available.</param>
        /// <param name="shippingDocumentType">No Metadata Documentation available.</param>
        public int InsertShipping(Nullable<global::System.DateTime> shippingDocumentDate, global::System.String shippingStatus, global::System.String shippingNote, Nullable<global::System.Int32> shippingLegalEntity, Nullable<global::System.Int32> shippingBusinessPartner, Nullable<global::System.Int32> shippingrPeriod, Nullable<global::System.Int32> shippingDocumentType)
        {
            ObjectParameter shippingDocumentDateParameter;
            if (shippingDocumentDate.HasValue)
            {
                shippingDocumentDateParameter = new ObjectParameter("ShippingDocumentDate", shippingDocumentDate);
            }
            else
            {
                shippingDocumentDateParameter = new ObjectParameter("ShippingDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter shippingStatusParameter;
            if (shippingStatus != null)
            {
                shippingStatusParameter = new ObjectParameter("ShippingStatus", shippingStatus);
            }
            else
            {
                shippingStatusParameter = new ObjectParameter("ShippingStatus", typeof(global::System.String));
            }
    
            ObjectParameter shippingNoteParameter;
            if (shippingNote != null)
            {
                shippingNoteParameter = new ObjectParameter("ShippingNote", shippingNote);
            }
            else
            {
                shippingNoteParameter = new ObjectParameter("ShippingNote", typeof(global::System.String));
            }
    
            ObjectParameter shippingLegalEntityParameter;
            if (shippingLegalEntity.HasValue)
            {
                shippingLegalEntityParameter = new ObjectParameter("ShippingLegalEntity", shippingLegalEntity);
            }
            else
            {
                shippingLegalEntityParameter = new ObjectParameter("ShippingLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingBusinessPartnerParameter;
            if (shippingBusinessPartner.HasValue)
            {
                shippingBusinessPartnerParameter = new ObjectParameter("ShippingBusinessPartner", shippingBusinessPartner);
            }
            else
            {
                shippingBusinessPartnerParameter = new ObjectParameter("ShippingBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingrPeriodParameter;
            if (shippingrPeriod.HasValue)
            {
                shippingrPeriodParameter = new ObjectParameter("ShippingrPeriod", shippingrPeriod);
            }
            else
            {
                shippingrPeriodParameter = new ObjectParameter("ShippingrPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingDocumentTypeParameter;
            if (shippingDocumentType.HasValue)
            {
                shippingDocumentTypeParameter = new ObjectParameter("ShippingDocumentType", shippingDocumentType);
            }
            else
            {
                shippingDocumentTypeParameter = new ObjectParameter("ShippingDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertShipping", shippingDocumentDateParameter, shippingStatusParameter, shippingNoteParameter, shippingLegalEntityParameter, shippingBusinessPartnerParameter, shippingrPeriodParameter, shippingDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int InsertShippingDetails(Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertShippingDetails", quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceID">No Metadata Documentation available.</param>
        /// <param name="invoiceDocumentDate">No Metadata Documentation available.</param>
        /// <param name="invoiceStatus">No Metadata Documentation available.</param>
        /// <param name="invoiceNote">No Metadata Documentation available.</param>
        /// <param name="invoiceLegalEntity">No Metadata Documentation available.</param>
        /// <param name="invoiceBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="invoicePeriod">No Metadata Documentation available.</param>
        /// <param name="invoiceDocumentType">No Metadata Documentation available.</param>
        public int UpdateInvoice(Nullable<global::System.Int32> invoiceID, Nullable<global::System.DateTime> invoiceDocumentDate, global::System.String invoiceStatus, global::System.String invoiceNote, Nullable<global::System.Int32> invoiceLegalEntity, Nullable<global::System.Int32> invoiceBusinessPartner, Nullable<global::System.Int32> invoicePeriod, Nullable<global::System.Int32> invoiceDocumentType)
        {
            ObjectParameter invoiceIDParameter;
            if (invoiceID.HasValue)
            {
                invoiceIDParameter = new ObjectParameter("InvoiceID", invoiceID);
            }
            else
            {
                invoiceIDParameter = new ObjectParameter("InvoiceID", typeof(global::System.Int32));
            }
    
            ObjectParameter invoiceDocumentDateParameter;
            if (invoiceDocumentDate.HasValue)
            {
                invoiceDocumentDateParameter = new ObjectParameter("InvoiceDocumentDate", invoiceDocumentDate);
            }
            else
            {
                invoiceDocumentDateParameter = new ObjectParameter("InvoiceDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter invoiceStatusParameter;
            if (invoiceStatus != null)
            {
                invoiceStatusParameter = new ObjectParameter("InvoiceStatus", invoiceStatus);
            }
            else
            {
                invoiceStatusParameter = new ObjectParameter("InvoiceStatus", typeof(global::System.String));
            }
    
            ObjectParameter invoiceNoteParameter;
            if (invoiceNote != null)
            {
                invoiceNoteParameter = new ObjectParameter("InvoiceNote", invoiceNote);
            }
            else
            {
                invoiceNoteParameter = new ObjectParameter("InvoiceNote", typeof(global::System.String));
            }
    
            ObjectParameter invoiceLegalEntityParameter;
            if (invoiceLegalEntity.HasValue)
            {
                invoiceLegalEntityParameter = new ObjectParameter("InvoiceLegalEntity", invoiceLegalEntity);
            }
            else
            {
                invoiceLegalEntityParameter = new ObjectParameter("InvoiceLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter invoiceBusinessPartnerParameter;
            if (invoiceBusinessPartner.HasValue)
            {
                invoiceBusinessPartnerParameter = new ObjectParameter("InvoiceBusinessPartner", invoiceBusinessPartner);
            }
            else
            {
                invoiceBusinessPartnerParameter = new ObjectParameter("InvoiceBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter invoicePeriodParameter;
            if (invoicePeriod.HasValue)
            {
                invoicePeriodParameter = new ObjectParameter("InvoicePeriod", invoicePeriod);
            }
            else
            {
                invoicePeriodParameter = new ObjectParameter("InvoicePeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter invoiceDocumentTypeParameter;
            if (invoiceDocumentType.HasValue)
            {
                invoiceDocumentTypeParameter = new ObjectParameter("InvoiceDocumentType", invoiceDocumentType);
            }
            else
            {
                invoiceDocumentTypeParameter = new ObjectParameter("InvoiceDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateInvoice", invoiceIDParameter, invoiceDocumentDateParameter, invoiceStatusParameter, invoiceNoteParameter, invoiceLegalEntityParameter, invoiceBusinessPartnerParameter, invoicePeriodParameter, invoiceDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="invoiceDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateInvoiceDetails(Nullable<global::System.Int32> invoiceDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter invoiceDetailsIDParameter;
            if (invoiceDetailsID.HasValue)
            {
                invoiceDetailsIDParameter = new ObjectParameter("InvoiceDetailsID", invoiceDetailsID);
            }
            else
            {
                invoiceDetailsIDParameter = new ObjectParameter("InvoiceDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateInvoiceDetails", invoiceDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleOrderID">No Metadata Documentation available.</param>
        /// <param name="saleOrderDocumentDate">No Metadata Documentation available.</param>
        /// <param name="saleOrderStatus">No Metadata Documentation available.</param>
        /// <param name="saleOrderNote">No Metadata Documentation available.</param>
        /// <param name="saleOrderLegalEntity">No Metadata Documentation available.</param>
        /// <param name="saleOrderBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="saleOrderPeriod">No Metadata Documentation available.</param>
        /// <param name="saleOrderDocumentType">No Metadata Documentation available.</param>
        public int UpdateSaleOrder(Nullable<global::System.Int32> saleOrderID, Nullable<global::System.DateTime> saleOrderDocumentDate, global::System.String saleOrderStatus, global::System.String saleOrderNote, Nullable<global::System.Int32> saleOrderLegalEntity, Nullable<global::System.Int32> saleOrderBusinessPartner, Nullable<global::System.Int32> saleOrderPeriod, Nullable<global::System.Int32> saleOrderDocumentType)
        {
            ObjectParameter saleOrderIDParameter;
            if (saleOrderID.HasValue)
            {
                saleOrderIDParameter = new ObjectParameter("SaleOrderID", saleOrderID);
            }
            else
            {
                saleOrderIDParameter = new ObjectParameter("SaleOrderID", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderDocumentDateParameter;
            if (saleOrderDocumentDate.HasValue)
            {
                saleOrderDocumentDateParameter = new ObjectParameter("SaleOrderDocumentDate", saleOrderDocumentDate);
            }
            else
            {
                saleOrderDocumentDateParameter = new ObjectParameter("SaleOrderDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter saleOrderStatusParameter;
            if (saleOrderStatus != null)
            {
                saleOrderStatusParameter = new ObjectParameter("SaleOrderStatus", saleOrderStatus);
            }
            else
            {
                saleOrderStatusParameter = new ObjectParameter("SaleOrderStatus", typeof(global::System.String));
            }
    
            ObjectParameter saleOrderNoteParameter;
            if (saleOrderNote != null)
            {
                saleOrderNoteParameter = new ObjectParameter("SaleOrderNote", saleOrderNote);
            }
            else
            {
                saleOrderNoteParameter = new ObjectParameter("SaleOrderNote", typeof(global::System.String));
            }
    
            ObjectParameter saleOrderLegalEntityParameter;
            if (saleOrderLegalEntity.HasValue)
            {
                saleOrderLegalEntityParameter = new ObjectParameter("SaleOrderLegalEntity", saleOrderLegalEntity);
            }
            else
            {
                saleOrderLegalEntityParameter = new ObjectParameter("SaleOrderLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderBusinessPartnerParameter;
            if (saleOrderBusinessPartner.HasValue)
            {
                saleOrderBusinessPartnerParameter = new ObjectParameter("SaleOrderBusinessPartner", saleOrderBusinessPartner);
            }
            else
            {
                saleOrderBusinessPartnerParameter = new ObjectParameter("SaleOrderBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderPeriodParameter;
            if (saleOrderPeriod.HasValue)
            {
                saleOrderPeriodParameter = new ObjectParameter("SaleOrderPeriod", saleOrderPeriod);
            }
            else
            {
                saleOrderPeriodParameter = new ObjectParameter("SaleOrderPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter saleOrderDocumentTypeParameter;
            if (saleOrderDocumentType.HasValue)
            {
                saleOrderDocumentTypeParameter = new ObjectParameter("SaleOrderDocumentType", saleOrderDocumentType);
            }
            else
            {
                saleOrderDocumentTypeParameter = new ObjectParameter("SaleOrderDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateSaleOrder", saleOrderIDParameter, saleOrderDocumentDateParameter, saleOrderStatusParameter, saleOrderNoteParameter, saleOrderLegalEntityParameter, saleOrderBusinessPartnerParameter, saleOrderPeriodParameter, saleOrderDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="saleOrderDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateSaleOrderDetails(Nullable<global::System.Int32> saleOrderDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter saleOrderDetailsIDParameter;
            if (saleOrderDetailsID.HasValue)
            {
                saleOrderDetailsIDParameter = new ObjectParameter("SaleOrderDetailsID", saleOrderDetailsID);
            }
            else
            {
                saleOrderDetailsIDParameter = new ObjectParameter("SaleOrderDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateSaleOrderDetails", saleOrderDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shippingID">No Metadata Documentation available.</param>
        /// <param name="shippingDocumentDate">No Metadata Documentation available.</param>
        /// <param name="shippingStatus">No Metadata Documentation available.</param>
        /// <param name="shippingNote">No Metadata Documentation available.</param>
        /// <param name="shippingLegalEntity">No Metadata Documentation available.</param>
        /// <param name="shippingBusinessPartner">No Metadata Documentation available.</param>
        /// <param name="shippingPeriod">No Metadata Documentation available.</param>
        /// <param name="shippingDocumentType">No Metadata Documentation available.</param>
        public int UpdateShipping(Nullable<global::System.Int32> shippingID, Nullable<global::System.DateTime> shippingDocumentDate, global::System.String shippingStatus, global::System.String shippingNote, Nullable<global::System.Int32> shippingLegalEntity, Nullable<global::System.Int32> shippingBusinessPartner, Nullable<global::System.Int32> shippingPeriod, Nullable<global::System.Int32> shippingDocumentType)
        {
            ObjectParameter shippingIDParameter;
            if (shippingID.HasValue)
            {
                shippingIDParameter = new ObjectParameter("ShippingID", shippingID);
            }
            else
            {
                shippingIDParameter = new ObjectParameter("ShippingID", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingDocumentDateParameter;
            if (shippingDocumentDate.HasValue)
            {
                shippingDocumentDateParameter = new ObjectParameter("ShippingDocumentDate", shippingDocumentDate);
            }
            else
            {
                shippingDocumentDateParameter = new ObjectParameter("ShippingDocumentDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter shippingStatusParameter;
            if (shippingStatus != null)
            {
                shippingStatusParameter = new ObjectParameter("ShippingStatus", shippingStatus);
            }
            else
            {
                shippingStatusParameter = new ObjectParameter("ShippingStatus", typeof(global::System.String));
            }
    
            ObjectParameter shippingNoteParameter;
            if (shippingNote != null)
            {
                shippingNoteParameter = new ObjectParameter("ShippingNote", shippingNote);
            }
            else
            {
                shippingNoteParameter = new ObjectParameter("ShippingNote", typeof(global::System.String));
            }
    
            ObjectParameter shippingLegalEntityParameter;
            if (shippingLegalEntity.HasValue)
            {
                shippingLegalEntityParameter = new ObjectParameter("ShippingLegalEntity", shippingLegalEntity);
            }
            else
            {
                shippingLegalEntityParameter = new ObjectParameter("ShippingLegalEntity", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingBusinessPartnerParameter;
            if (shippingBusinessPartner.HasValue)
            {
                shippingBusinessPartnerParameter = new ObjectParameter("ShippingBusinessPartner", shippingBusinessPartner);
            }
            else
            {
                shippingBusinessPartnerParameter = new ObjectParameter("ShippingBusinessPartner", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingPeriodParameter;
            if (shippingPeriod.HasValue)
            {
                shippingPeriodParameter = new ObjectParameter("ShippingPeriod", shippingPeriod);
            }
            else
            {
                shippingPeriodParameter = new ObjectParameter("ShippingPeriod", typeof(global::System.Int32));
            }
    
            ObjectParameter shippingDocumentTypeParameter;
            if (shippingDocumentType.HasValue)
            {
                shippingDocumentTypeParameter = new ObjectParameter("ShippingDocumentType", shippingDocumentType);
            }
            else
            {
                shippingDocumentTypeParameter = new ObjectParameter("ShippingDocumentType", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateShipping", shippingIDParameter, shippingDocumentDateParameter, shippingStatusParameter, shippingNoteParameter, shippingLegalEntityParameter, shippingBusinessPartnerParameter, shippingPeriodParameter, shippingDocumentTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="shippingDetailsID">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="price">No Metadata Documentation available.</param>
        /// <param name="taxeID">No Metadata Documentation available.</param>
        /// <param name="productID">No Metadata Documentation available.</param>
        public int UpdateShippingDetails(Nullable<global::System.Int32> shippingDetailsID, Nullable<global::System.Int32> quantity, Nullable<global::System.Decimal> price, Nullable<global::System.Int32> taxeID, Nullable<global::System.Int32> productID)
        {
            ObjectParameter shippingDetailsIDParameter;
            if (shippingDetailsID.HasValue)
            {
                shippingDetailsIDParameter = new ObjectParameter("ShippingDetailsID", shippingDetailsID);
            }
            else
            {
                shippingDetailsIDParameter = new ObjectParameter("ShippingDetailsID", typeof(global::System.Int32));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter priceParameter;
            if (price.HasValue)
            {
                priceParameter = new ObjectParameter("Price", price);
            }
            else
            {
                priceParameter = new ObjectParameter("Price", typeof(global::System.Decimal));
            }
    
            ObjectParameter taxeIDParameter;
            if (taxeID.HasValue)
            {
                taxeIDParameter = new ObjectParameter("TaxeID", taxeID);
            }
            else
            {
                taxeIDParameter = new ObjectParameter("TaxeID", typeof(global::System.Int32));
            }
    
            ObjectParameter productIDParameter;
            if (productID.HasValue)
            {
                productIDParameter = new ObjectParameter("ProductID", productID);
            }
            else
            {
                productIDParameter = new ObjectParameter("ProductID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateShippingDetails", shippingDetailsIDParameter, quantityParameter, priceParameter, taxeIDParameter, productIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="chart">Initial value of the Chart property.</param>
        public static Account CreateAccount(global::System.Int32 id, global::System.String code, global::System.String name, global::System.Int32 chart)
        {
            Account account = new Account();
            account.Id = id;
            account.Code = code;
            account.Name = name;
            account.Chart = chart;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Posting
        {
            get
            {
                return _Posting;
            }
            set
            {
                OnPostingChanging(value);
                ReportPropertyChanging("Posting");
                _Posting = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Posting");
                OnPostingChanged();
            }
        }
        private global::System.String _Posting;
        partial void OnPostingChanging(global::System.String value);
        partial void OnPostingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Budget
        {
            get
            {
                return _Budget;
            }
            set
            {
                OnBudgetChanging(value);
                ReportPropertyChanging("Budget");
                _Budget = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Budget");
                OnBudgetChanged();
            }
        }
        private global::System.String _Budget;
        partial void OnBudgetChanging(global::System.String value);
        partial void OnBudgetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private Nullable<global::System.Int32> _Group;
        partial void OnGroupChanging(Nullable<global::System.Int32> value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Chart
        {
            get
            {
                return _Chart;
            }
            set
            {
                OnChartChanging(value);
                ReportPropertyChanging("Chart");
                _Chart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chart");
                OnChartChanged();
            }
        }
        private global::System.Int32 _Chart;
        partial void OnChartChanging(global::System.Int32 value);
        partial void OnChartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private global::System.String _Parent;
        partial void OnParentChanging(global::System.String value);
        partial void OnParentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ACC01_CHA01_FK", "Chart")]
        public Chart AccountChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACC01_CHA01_FK", "Chart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACC01_CHA01_FK", "Chart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Chart> AccountChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACC01_CHA01_FK", "Chart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Chart>("CbaModel.ACC01_CHA01_FK", "Chart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JLI01_ACC01_FK", "JournalLines")]
        public EntityCollection<JournalLines> AccountLine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalLines>("CbaModel.JLI01_ACC01_FK", "JournalLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalLines>("CbaModel.JLI01_ACC01_FK", "JournalLines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_ACC01_FK", "Balance")]
        public EntityCollection<Balance> AccountBalance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Balance>("CbaModel.BAL01_ACC01_FK", "Balance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Balance>("CbaModel.BAL01_ACC01_FK", "Balance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_ACC01_FK", "BUL01")]
        public EntityCollection<BudgetLines> AccountBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BudgetLines>("CbaModel.BUL01_ACC01_FK", "BUL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BudgetLines>("CbaModel.BUL01_ACC01_FK", "BUL01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Address CreateAddress(global::System.Int32 id)
        {
            Address address = new Address();
            address.Id = id;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateRegion
        {
            get
            {
                return _StateRegion;
            }
            set
            {
                OnStateRegionChanging(value);
                ReportPropertyChanging("StateRegion");
                _StateRegion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateRegion");
                OnStateRegionChanged();
            }
        }
        private global::System.String _StateRegion;
        partial void OnStateRegionChanging(global::System.String value);
        partial void OnStateRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ADD01_TER01_FK", "TER01")]
        public Territory AddressCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.ADD01_TER01_FK", "TER01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.ADD01_TER01_FK", "TER01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Territory> AddressCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.ADD01_TER01_FK", "TER01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Territory>("CbaModel.ADD01_TER01_FK", "TER01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_LEG01_ADD01", "LegalEntity")]
        public EntityCollection<LegalEntity> AddressLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("CbaModel.FK_LEG01_ADD01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("CbaModel.FK_LEG01_ADD01", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Balance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Balance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Balance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Balance CreateBalance(global::System.Int32 id)
        {
            Balance balance = new Balance();
            balance.Id = id;
            return balance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DebitStart
        {
            get
            {
                return _DebitStart;
            }
            set
            {
                OnDebitStartChanging(value);
                ReportPropertyChanging("DebitStart");
                _DebitStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitStart");
                OnDebitStartChanged();
            }
        }
        private Nullable<global::System.Decimal> _DebitStart;
        partial void OnDebitStartChanging(Nullable<global::System.Decimal> value);
        partial void OnDebitStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CreditStart
        {
            get
            {
                return _CreditStart;
            }
            set
            {
                OnCreditStartChanging(value);
                ReportPropertyChanging("CreditStart");
                _CreditStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditStart");
                OnCreditStartChanged();
            }
        }
        private Nullable<global::System.Decimal> _CreditStart;
        partial void OnCreditStartChanging(Nullable<global::System.Decimal> value);
        partial void OnCreditStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PeriodDebit
        {
            get
            {
                return _PeriodDebit;
            }
            set
            {
                OnPeriodDebitChanging(value);
                ReportPropertyChanging("PeriodDebit");
                _PeriodDebit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodDebit");
                OnPeriodDebitChanged();
            }
        }
        private Nullable<global::System.Decimal> _PeriodDebit;
        partial void OnPeriodDebitChanging(Nullable<global::System.Decimal> value);
        partial void OnPeriodDebitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PeriodCredit
        {
            get
            {
                return _PeriodCredit;
            }
            set
            {
                OnPeriodCreditChanging(value);
                ReportPropertyChanging("PeriodCredit");
                _PeriodCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeriodCredit");
                OnPeriodCreditChanged();
            }
        }
        private Nullable<global::System.Decimal> _PeriodCredit;
        partial void OnPeriodCreditChanging(Nullable<global::System.Decimal> value);
        partial void OnPeriodCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private Nullable<global::System.Int32> _Account;
        partial void OnAccountChanging(Nullable<global::System.Int32> value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Journal
        {
            get
            {
                return _Journal;
            }
            set
            {
                OnJournalChanging(value);
                ReportPropertyChanging("Journal");
                _Journal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Journal");
                OnJournalChanged();
            }
        }
        private Nullable<global::System.Int32> _Journal;
        partial void OnJournalChanging(Nullable<global::System.Int32> value);
        partial void OnJournalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Lignes
        {
            get
            {
                return _Lignes;
            }
            set
            {
                OnLignesChanging(value);
                ReportPropertyChanging("Lignes");
                _Lignes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lignes");
                OnLignesChanged();
            }
        }
        private Nullable<global::System.Int32> _Lignes;
        partial void OnLignesChanging(Nullable<global::System.Int32> value);
        partial void OnLignesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ledger
        {
            get
            {
                return _Ledger;
            }
            set
            {
                OnLedgerChanging(value);
                ReportPropertyChanging("Ledger");
                _Ledger = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ledger");
                OnLedgerChanged();
            }
        }
        private Nullable<global::System.Int32> _Ledger;
        partial void OnLedgerChanging(Nullable<global::System.Int32> value);
        partial void OnLedgerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Currency;
        partial void OnCurrencyChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_CUR01_FK", "Currency")]
        public Currency BalanceCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.BAL01_CUR01_FK", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.BAL01_CUR01_FK", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> BalanceCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.BAL01_CUR01_FK", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("CbaModel.BAL01_CUR01_FK", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_PER01_FK", "Period")]
        public Period BalancePeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BAL01_PER01_FK", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BAL01_PER01_FK", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> BalancePeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BAL01_PER01_FK", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.BAL01_PER01_FK", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_ACC01_FK", "Account")]
        public Account BalanceAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BAL01_ACC01_FK", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BAL01_ACC01_FK", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> BalanceAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BAL01_ACC01_FK", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CbaModel.BAL01_ACC01_FK", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Bank CreateBank(global::System.Int32 id)
        {
            Bank bank = new Bank();
            bank.Id = id;
            return bank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAN01_TER01_FK", "TER01")]
        public Territory BankTerritory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.BAN01_TER01_FK", "TER01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.BAN01_TER01_FK", "TER01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Territory> BankTerritoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.BAN01_TER01_FK", "TER01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Territory>("CbaModel.BAN01_TER01_FK", "TER01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bill object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Bill CreateBill(global::System.Int32 id)
        {
            Bill bill = new Bill();
            bill.Id = id;
            return bill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_BPA01", "BPA01")]
        public BusinessPartner BillBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BIL01_BPA01", "BPA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BIL01_BPA01", "BPA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> BillBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BIL01_BPA01", "BPA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_BIL01_BPA01", "BPA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_LEG01", "LEG01")]
        public LegalEntity BillLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BIL01_LEG01", "LEG01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BIL01_LEG01", "LEG01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> BillLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BIL01_LEG01", "LEG01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_BIL01_LEG01", "LEG01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_PER01", "Period")]
        public Period BillPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_BIL01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_BIL01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> BillPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_BIL01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_BIL01_PER01", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_BIL01", "BLI01")]
        public EntityCollection<BillLines> BillLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillLines>("CbaModel.FK_BLI01_BIL01", "BLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillLines>("CbaModel.FK_BLI01_BIL01", "BLI01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="BillLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="billId">Initial value of the BillId property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static BillLines CreateBillLines(global::System.Int32 lineId, global::System.Int32 billId, global::System.Decimal lineGross)
        {
            BillLines billLines = new BillLines();
            billLines.LineId = lineId;
            billLines.BillId = billId;
            billLines.LineGross = lineGross;
            return billLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillId
        {
            get
            {
                return _BillId;
            }
            set
            {
                if (_BillId != value)
                {
                    OnBillIdChanging(value);
                    ReportPropertyChanging("BillId");
                    _BillId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillId");
                    OnBillIdChanged();
                }
            }
        }
        private global::System.Int32 _BillId;
        partial void OnBillIdChanging(global::System.Int32 value);
        partial void OnBillIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_BIL01", "BIL01")]
        public Bill LineBill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CbaModel.FK_BLI01_BIL01", "BIL01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CbaModel.FK_BLI01_BIL01", "BIL01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> LineBillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("CbaModel.FK_BLI01_BIL01", "BIL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("CbaModel.FK_BLI01_BIL01", "BIL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_PRO01", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_BLI01_PRO01", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_BLI01_PRO01", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_BLI01_PRO01", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.FK_BLI01_PRO01", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_TAX01", "Tax")]
        public Tax LineTaxId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_BLI01_TAX01", "Tax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_BLI01_TAX01", "Tax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tax> LineTaxIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_BLI01_TAX01", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tax>("CbaModel.FK_BLI01_TAX01", "Tax", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Budget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Budget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Budget object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Budget CreateBudget(global::System.Int32 id)
        {
            Budget budget = new Budget();
            budget.Id = id;
            return budget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Calendar
        {
            get
            {
                return _Calendar;
            }
            set
            {
                OnCalendarChanging(value);
                ReportPropertyChanging("Calendar");
                _Calendar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calendar");
                OnCalendarChanged();
            }
        }
        private Nullable<global::System.Int32> _Calendar;
        partial void OnCalendarChanging(Nullable<global::System.Int32> value);
        partial void OnCalendarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ledger
        {
            get
            {
                return _Ledger;
            }
            set
            {
                OnLedgerChanging(value);
                ReportPropertyChanging("Ledger");
                _Ledger = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ledger");
                OnLedgerChanged();
            }
        }
        private Nullable<global::System.Int32> _Ledger;
        partial void OnLedgerChanging(Nullable<global::System.Int32> value);
        partial void OnLedgerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUD01_CAL01_FK", "Calendar")]
        public Calendar BudgetCalendar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.BUD01_CAL01_FK", "Calendar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.BUD01_CAL01_FK", "Calendar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendar> BudgetCalendarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.BUD01_CAL01_FK", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendar>("CbaModel.BUD01_CAL01_FK", "Calendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_BUD01_FK", "BUL01")]
        public EntityCollection<BudgetLines> BudgetLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BudgetLines>("CbaModel.BUL01_BUD01_FK", "BUL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BudgetLines>("CbaModel.BUL01_BUD01_FK", "BUL01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="BudgetLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BudgetLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BudgetLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="budgetId">Initial value of the BudgetId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static BudgetLines CreateBudgetLines(global::System.Int32 lineId, global::System.Int32 budgetId, global::System.Decimal amount)
        {
            BudgetLines budgetLines = new BudgetLines();
            budgetLines.LineId = lineId;
            budgetLines.BudgetId = budgetId;
            budgetLines.Amount = amount;
            return budgetLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BudgetId
        {
            get
            {
                return _BudgetId;
            }
            set
            {
                if (_BudgetId != value)
                {
                    OnBudgetIdChanging(value);
                    ReportPropertyChanging("BudgetId");
                    _BudgetId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BudgetId");
                    OnBudgetIdChanged();
                }
            }
        }
        private global::System.Int32 _BudgetId;
        partial void OnBudgetIdChanging(global::System.Int32 value);
        partial void OnBudgetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private Nullable<global::System.Int32> _Account;
        partial void OnAccountChanging(Nullable<global::System.Int32> value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_ACC01_FK", "Account")]
        public Account LineAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BUL01_ACC01_FK", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BUL01_ACC01_FK", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> LineAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.BUL01_ACC01_FK", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CbaModel.BUL01_ACC01_FK", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_BUD01_FK", "BUD01")]
        public Budget LineBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Budget>("CbaModel.BUL01_BUD01_FK", "BUD01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Budget>("CbaModel.BUL01_BUD01_FK", "BUD01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Budget> LineBudgetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Budget>("CbaModel.BUL01_BUD01_FK", "BUD01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Budget>("CbaModel.BUL01_BUD01_FK", "BUD01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_PER01_FK", "Period")]
        public Period LinePeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BUL01_PER01_FK", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BUL01_PER01_FK", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> LinePeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.BUL01_PER01_FK", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.BUL01_PER01_FK", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="BusinessPartner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessPartner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessPartner object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static BusinessPartner CreateBusinessPartner(global::System.Int32 id, global::System.String code, global::System.String name, global::System.String type)
        {
            BusinessPartner businessPartner = new BusinessPartner();
            businessPartner.Id = id;
            businessPartner.Code = code;
            businessPartner.Name = name;
            businessPartner.Type = type;
            return businessPartner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_BPA01", "BIL01")]
        public EntityCollection<Bill> BusinessPartnerBill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("CbaModel.FK_BIL01_BPA01", "BIL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("CbaModel.FK_BIL01_BPA01", "BIL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_BPA01", "GOR01")]
        public EntityCollection<GoodsReceipt> BusinessPartnerGoodsReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_BPA01", "GOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_BPA01", "GOR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_BPA01", "RFQ01")]
        public EntityCollection<RequestForQuote> BusinessPartnerRequestForQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_BPA01", "RFQ01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_BPA01", "RFQ01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_BPA01", "QUO01")]
        public EntityCollection<Quote> BusinessPartnerQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("CbaModel.FK_QUO01_BPA01", "QUO01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("CbaModel.FK_QUO01_BPA01", "QUO01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPD01_BPA01", "BPD01")]
        public EntityCollection<BusinessPartnerAddress> BusinessPartnerAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessPartnerAddress>("CbaModel.FK_BPD01_BPA01", "BPD01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessPartnerAddress>("CbaModel.FK_BPD01_BPA01", "BPD01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_BPA01", "Shipment")]
        public EntityCollection<Shipment> BusinessPartnerShipping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("CbaModel.FK_SHI01_BPA01", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("CbaModel.FK_SHI01_BPA01", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_BPA01", "INV01")]
        public EntityCollection<Invoice> BusinessPartnerInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CbaModel.FK_INV01_BPA01", "INV01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CbaModel.FK_INV01_BPA01", "INV01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPA01_LEG01", "LegalEntity")]
        public LegalEntity BusinessPartnerLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BPA01_LEG01", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BPA01_LEG01", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> BusinessPartnerLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_BPA01_LEG01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_BPA01_LEG01", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_BPA01", "POR01")]
        public EntityCollection<PurchaseOrder> BusinessPartnerPurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_BPA01", "POR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_BPA01", "POR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_BPA01", "SOR01")]
        public EntityCollection<SaleOrder> BusinessPartnerSaleOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_BPA01", "SOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_BPA01", "SOR01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="BusinessPartnerAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessPartnerAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessPartnerAddress object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="stateProvince">Initial value of the StateProvince property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static BusinessPartnerAddress CreateBusinessPartnerAddress(global::System.Int32 id, global::System.String city, global::System.String street, global::System.String stateProvince, global::System.String type)
        {
            BusinessPartnerAddress businessPartnerAddress = new BusinessPartnerAddress();
            businessPartnerAddress.Id = id;
            businessPartnerAddress.City = city;
            businessPartnerAddress.Street = street;
            businessPartnerAddress.StateProvince = stateProvince;
            businessPartnerAddress.Type = type;
            return businessPartnerAddress;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPD01_BPA01", "BPA01")]
        public BusinessPartner BusinessPartnerAddressBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BPD01_BPA01", "BPA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BPD01_BPA01", "BPA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> BusinessPartnerAddressBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_BPD01_BPA01", "BPA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_BPD01_BPA01", "BPA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPD01_TER01", "TER01")]
        public Territory BusinessPartnerAddressTerritory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.FK_BPD01_TER01", "TER01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.FK_BPD01_TER01", "TER01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Territory> BusinessPartnerAddressTerritoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Territory>("CbaModel.FK_BPD01_TER01", "TER01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Territory>("CbaModel.FK_BPD01_TER01", "TER01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Calendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calendar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calendar object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Calendar CreateCalendar(global::System.Int32 id)
        {
            Calendar calendar = new Calendar();
            calendar.Id = id;
            return calendar;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PER01_CAL01_FK", "PER01")]
        public EntityCollection<Period> CalendarPeriods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Period>("CbaModel.PER01_CAL01_FK", "PER01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Period>("CbaModel.PER01_CAL01_FK", "PER01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUD01_CAL01_FK", "BUD01")]
        public EntityCollection<Budget> CalendarBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Budget>("CbaModel.BUD01_CAL01_FK", "BUD01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Budget>("CbaModel.BUD01_CAL01_FK", "BUD01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Chart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Chart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Chart object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Chart CreateChart(global::System.Int32 id)
        {
            Chart chart = new Chart();
            chart.Id = id;
            return chart;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UnpdatedOn
        {
            get
            {
                return _UnpdatedOn;
            }
            set
            {
                OnUnpdatedOnChanging(value);
                ReportPropertyChanging("UnpdatedOn");
                _UnpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnpdatedOn");
                OnUnpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UnpdatedOn;
        partial void OnUnpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUnpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ACS01_CHA01_FK", "ACS01")]
        public EntityCollection<Segment> ChartSegment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Segment>("CbaModel.ACS01_CHA01_FK", "ACS01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Segment>("CbaModel.ACS01_CHA01_FK", "ACS01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ACC01_CHA01_FK", "ACC01")]
        public EntityCollection<Account> ChartAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("CbaModel.ACC01_CHA01_FK", "ACC01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("CbaModel.ACC01_CHA01_FK", "ACC01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_LEG01_CHA01", "LegalEntity")]
        public EntityCollection<LegalEntity> ChartLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LegalEntity>("CbaModel.FK_LEG01_CHA01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LegalEntity>("CbaModel.FK_LEG01_CHA01", "LegalEntity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Currency CreateCurrency(global::System.Int32 id)
        {
            Currency currency = new Currency();
            currency.Id = id;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RAT01_CUR01_FROM_FK", "RAT01")]
        public EntityCollection<Rate> CurrencyRateFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rate>("CbaModel.RAT01_CUR01_FROM_FK", "RAT01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rate>("CbaModel.RAT01_CUR01_FROM_FK", "RAT01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RAT01_CUR01_TO_FK", "RAT01")]
        public EntityCollection<Rate> CurrencyRateTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rate>("CbaModel.RAT01_CUR01_TO_FK", "RAT01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rate>("CbaModel.RAT01_CUR01_TO_FK", "RAT01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_CUR01_FK", "BAL01")]
        public EntityCollection<Balance> CurrencyBalance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Balance>("CbaModel.BAL01_CUR01_FK", "BAL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Balance>("CbaModel.BAL01_CUR01_FK", "BAL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JHE01_CUR01_FK", "JHE01")]
        public EntityCollection<Journal> CurrencyJournal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("CbaModel.JHE01_CUR01_FK", "JHE01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("CbaModel.JHE01_CUR01_FK", "JHE01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="GoodsReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoodsReceipt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static GoodsReceipt CreateGoodsReceipt(global::System.Int32 id)
        {
            GoodsReceipt goodsReceipt = new GoodsReceipt();
            goodsReceipt.Id = id;
            return goodsReceipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_BPA01", "BPA01")]
        public BusinessPartner GoodsReceiptBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_GOR01_BPA01", "BPA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_GOR01_BPA01", "BPA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> GoodsReceiptBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_GOR01_BPA01", "BPA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_GOR01_BPA01", "BPA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_LEG01", "LEG01")]
        public LegalEntity GoodsReceiptLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_GOR01_LEG01", "LEG01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_GOR01_LEG01", "LEG01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> GoodsReceiptLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_GOR01_LEG01", "LEG01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_GOR01_LEG01", "LEG01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_PER01", "Period")]
        public Period GoodsReceiptPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_GOR01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_GOR01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> GoodsReceiptPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_GOR01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_GOR01_PER01", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "GRL01_GOR01_FK", "GRL01")]
        public EntityCollection<GoodsReceiptLines> GoodsReceiptLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceiptLines>("CbaModel.GRL01_GOR01_FK", "GRL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceiptLines>("CbaModel.GRL01_GOR01_FK", "GRL01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="GoodsReceiptLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsReceiptLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoodsReceiptLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="goodsReceiptId">Initial value of the GoodsReceiptId property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static GoodsReceiptLines CreateGoodsReceiptLines(global::System.Int32 lineId, global::System.Int32 goodsReceiptId, global::System.Decimal lineGross)
        {
            GoodsReceiptLines goodsReceiptLines = new GoodsReceiptLines();
            goodsReceiptLines.LineId = lineId;
            goodsReceiptLines.GoodsReceiptId = goodsReceiptId;
            goodsReceiptLines.LineGross = lineGross;
            return goodsReceiptLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoodsReceiptId
        {
            get
            {
                return _GoodsReceiptId;
            }
            set
            {
                if (_GoodsReceiptId != value)
                {
                    OnGoodsReceiptIdChanging(value);
                    ReportPropertyChanging("GoodsReceiptId");
                    _GoodsReceiptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoodsReceiptId");
                    OnGoodsReceiptIdChanged();
                }
            }
        }
        private global::System.Int32 _GoodsReceiptId;
        partial void OnGoodsReceiptIdChanging(global::System.Int32 value);
        partial void OnGoodsReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WarehouseId
        {
            get
            {
                return _WarehouseId;
            }
            set
            {
                OnWarehouseIdChanging(value);
                ReportPropertyChanging("WarehouseId");
                _WarehouseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WarehouseId");
                OnWarehouseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WarehouseId;
        partial void OnWarehouseIdChanging(Nullable<global::System.Int32> value);
        partial void OnWarehouseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "GRL01_GOR01_FK", "GOR01")]
        public GoodsReceipt LineGoodsReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsReceipt>("CbaModel.GRL01_GOR01_FK", "GOR01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsReceipt>("CbaModel.GRL01_GOR01_FK", "GOR01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoodsReceipt> LineGoodsReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsReceipt>("CbaModel.GRL01_GOR01_FK", "GOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoodsReceipt>("CbaModel.GRL01_GOR01_FK", "GOR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GRL01_WAR01", "WAR01")]
        public Warehouse LineWarehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("CbaModel.FK_GRL01_WAR01", "WAR01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("CbaModel.FK_GRL01_WAR01", "WAR01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> LineWarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("CbaModel.FK_GRL01_WAR01", "WAR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("CbaModel.FK_GRL01_WAR01", "WAR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "GRL01_PRO01_FK", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.GRL01_PRO01_FK", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.GRL01_PRO01_FK", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.GRL01_PRO01_FK", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.GRL01_PRO01_FK", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Invoice CreateInvoice(global::System.Int32 id)
        {
            Invoice invoice = new Invoice();
            invoice.Id = id;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_INV01", "INL01")]
        public EntityCollection<InvoiceLines> InvoiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_INV01", "INL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_INV01", "INL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_BPA01", "BusinessPartner")]
        public BusinessPartner InvoiceBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_INV01_BPA01", "BusinessPartner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_INV01_BPA01", "BusinessPartner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> InvoiceBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_INV01_BPA01", "BusinessPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_INV01_BPA01", "BusinessPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_LEG01", "LegalEntity")]
        public LegalEntity InvoiceLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_INV01_LEG01", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_INV01_LEG01", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> InvoiceLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_INV01_LEG01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_INV01_LEG01", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_PER01", "Period")]
        public Period InvoicePeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_INV01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_INV01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> InvoicePeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_INV01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_INV01_PER01", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="InvoiceLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="invoiceId">Initial value of the InvoiceId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static InvoiceLines CreateInvoiceLines(global::System.Int32 lineId, global::System.Int32 invoiceId, global::System.Int32 quantity, global::System.Decimal price, global::System.Decimal lineGross)
        {
            InvoiceLines invoiceLines = new InvoiceLines();
            invoiceLines.LineId = lineId;
            invoiceLines.InvoiceId = invoiceId;
            invoiceLines.Quantity = quantity;
            invoiceLines.Price = price;
            invoiceLines.LineGross = lineGross;
            return invoiceLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                if (_InvoiceId != value)
                {
                    OnInvoiceIdChanging(value);
                    ReportPropertyChanging("InvoiceId");
                    _InvoiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceId");
                    OnInvoiceIdChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceId;
        partial void OnInvoiceIdChanging(global::System.Int32 value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_INV01", "INV01")]
        public Invoice LineInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CbaModel.FK_INL01_INV01", "INV01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CbaModel.FK_INL01_INV01", "INV01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> LineInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CbaModel.FK_INL01_INV01", "INV01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("CbaModel.FK_INL01_INV01", "INV01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_PRO01", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_INL01_PRO01", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_INL01_PRO01", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_INL01_PRO01", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.FK_INL01_PRO01", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_TAX01", "Tax")]
        public Tax LineTaxId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_INL01_TAX01", "Tax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_INL01_TAX01", "Tax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tax> LineTaxIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_INL01_TAX01", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tax>("CbaModel.FK_INL01_TAX01", "Tax", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Journal CreateJournal(global::System.Int32 id)
        {
            Journal journal = new Journal();
            journal.Id = id;
            return journal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActualFlag
        {
            get
            {
                return _ActualFlag;
            }
            set
            {
                OnActualFlagChanging(value);
                ReportPropertyChanging("ActualFlag");
                _ActualFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActualFlag");
                OnActualFlagChanged();
            }
        }
        private global::System.String _ActualFlag;
        partial void OnActualFlagChanging(global::System.String value);
        partial void OnActualFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BalancedFlag
        {
            get
            {
                return _BalancedFlag;
            }
            set
            {
                OnBalancedFlagChanging(value);
                ReportPropertyChanging("BalancedFlag");
                _BalancedFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BalancedFlag");
                OnBalancedFlagChanged();
            }
        }
        private global::System.String _BalancedFlag;
        partial void OnBalancedFlagChanging(global::System.String value);
        partial void OnBalancedFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalCredit
        {
            get
            {
                return _TotalCredit;
            }
            set
            {
                OnTotalCreditChanging(value);
                ReportPropertyChanging("TotalCredit");
                _TotalCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCredit");
                OnTotalCreditChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalCredit = 0.00m;
        partial void OnTotalCreditChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalDebit
        {
            get
            {
                return _TotalDebit;
            }
            set
            {
                OnTotalDebitChanging(value);
                ReportPropertyChanging("TotalDebit");
                _TotalDebit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalDebit");
                OnTotalDebitChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalDebit = 0.00m;
        partial void OnTotalDebitChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalDebitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _Category;
        partial void OnCategoryChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Currency;
        partial void OnCurrencyChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ledger
        {
            get
            {
                return _Ledger;
            }
            set
            {
                OnLedgerChanging(value);
                ReportPropertyChanging("Ledger");
                _Ledger = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ledger");
                OnLedgerChanged();
            }
        }
        private Nullable<global::System.Int32> _Ledger;
        partial void OnLedgerChanging(Nullable<global::System.Int32> value);
        partial void OnLedgerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JHE01_CUR01_FK", "Currency")]
        public Currency JournalCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.JHE01_CUR01_FK", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.JHE01_CUR01_FK", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> JournalCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.JHE01_CUR01_FK", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("CbaModel.JHE01_CUR01_FK", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JHE01_PER01_FK", "Period")]
        public Period JournalPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.JHE01_PER01_FK", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.JHE01_PER01_FK", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> JournalPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.JHE01_PER01_FK", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.JHE01_PER01_FK", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JLI01_JHE01_FK", "JLI01")]
        public EntityCollection<JournalLines> JournalLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalLines>("CbaModel.JLI01_JHE01_FK", "JLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalLines>("CbaModel.JLI01_JHE01_FK", "JLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_JHE01_LEG01", "LEG01")]
        public LegalEntity JournalLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_JHE01_LEG01", "LEG01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_JHE01_LEG01", "LEG01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> JournalLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_JHE01_LEG01", "LEG01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_JHE01_LEG01", "LEG01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="JournalLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JournalLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="journalId">Initial value of the JournalId property.</param>
        /// <param name="debitCreditFlag">Initial value of the DebitCreditFlag property.</param>
        public static JournalLines CreateJournalLines(global::System.Int32 lineId, global::System.Int32 journalId, global::System.String debitCreditFlag)
        {
            JournalLines journalLines = new JournalLines();
            journalLines.LineId = lineId;
            journalLines.JournalId = journalId;
            journalLines.DebitCreditFlag = debitCreditFlag;
            return journalLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JournalId
        {
            get
            {
                return _JournalId;
            }
            set
            {
                if (_JournalId != value)
                {
                    OnJournalIdChanging(value);
                    ReportPropertyChanging("JournalId");
                    _JournalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalId");
                    OnJournalIdChanged();
                }
            }
        }
        private global::System.Int32 _JournalId;
        partial void OnJournalIdChanging(global::System.Int32 value);
        partial void OnJournalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DebitCreditFlag
        {
            get
            {
                return _DebitCreditFlag;
            }
            set
            {
                OnDebitCreditFlagChanging(value);
                ReportPropertyChanging("DebitCreditFlag");
                _DebitCreditFlag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DebitCreditFlag");
                OnDebitCreditFlagChanged();
            }
        }
        private global::System.String _DebitCreditFlag;
        partial void OnDebitCreditFlagChanging(global::System.String value);
        partial void OnDebitCreditFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount = 0.00m;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private Nullable<global::System.Int32> _Account;
        partial void OnAccountChanging(Nullable<global::System.Int32> value);
        partial void OnAccountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JLI01_JHE01_FK", "JHE01")]
        public Journal LineJournal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("CbaModel.JLI01_JHE01_FK", "JHE01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("CbaModel.JLI01_JHE01_FK", "JHE01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> LineJournalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("CbaModel.JLI01_JHE01_FK", "JHE01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Journal>("CbaModel.JLI01_JHE01_FK", "JHE01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JLI01_ACC01_FK", "Account")]
        public Account LineAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.JLI01_ACC01_FK", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.JLI01_ACC01_FK", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> LineAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("CbaModel.JLI01_ACC01_FK", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("CbaModel.JLI01_ACC01_FK", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="LegalEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LegalEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LegalEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static LegalEntity CreateLegalEntity(global::System.Int32 id)
        {
            LegalEntity legalEntity = new LegalEntity();
            legalEntity.Id = id;
            return legalEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationId
        {
            get
            {
                return _RegistrationId;
            }
            set
            {
                OnRegistrationIdChanging(value);
                ReportPropertyChanging("RegistrationId");
                _RegistrationId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationId");
                OnRegistrationIdChanged();
            }
        }
        private global::System.String _RegistrationId;
        partial void OnRegistrationIdChanging(global::System.String value);
        partial void OnRegistrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FiscalId
        {
            get
            {
                return _FiscalId;
            }
            set
            {
                OnFiscalIdChanging(value);
                ReportPropertyChanging("FiscalId");
                _FiscalId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FiscalId");
                OnFiscalIdChanged();
            }
        }
        private global::System.String _FiscalId;
        partial void OnFiscalIdChanging(global::System.String value);
        partial void OnFiscalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Chart
        {
            get
            {
                return _Chart;
            }
            set
            {
                OnChartChanging(value);
                ReportPropertyChanging("Chart");
                _Chart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chart");
                OnChartChanged();
            }
        }
        private Nullable<global::System.Int32> _Chart;
        partial void OnChartChanging(Nullable<global::System.Int32> value);
        partial void OnChartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Headquarters
        {
            get
            {
                return _Headquarters;
            }
            set
            {
                OnHeadquartersChanging(value);
                ReportPropertyChanging("Headquarters");
                _Headquarters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Headquarters");
                OnHeadquartersChanged();
            }
        }
        private Nullable<global::System.Int32> _Headquarters;
        partial void OnHeadquartersChanging(Nullable<global::System.Int32> value);
        partial void OnHeadquartersChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_LEG01", "BIL01")]
        public EntityCollection<Bill> LegalEntityBills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("CbaModel.FK_BIL01_LEG01", "BIL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("CbaModel.FK_BIL01_LEG01", "BIL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_LEG01", "GOR01")]
        public EntityCollection<GoodsReceipt> LegalEntityGoodsReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_LEG01", "GOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_LEG01", "GOR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_LEG01", "RFQ01")]
        public EntityCollection<RequestForQuote> LegalEntityRequestForQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_LEG01", "RFQ01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_LEG01", "RFQ01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_LEG01", "QUO01")]
        public EntityCollection<Quote> LegalEntityQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("CbaModel.FK_QUO01_LEG01", "QUO01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("CbaModel.FK_QUO01_LEG01", "QUO01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_JHE01_LEG01", "Journal")]
        public EntityCollection<Journal> LegalEntityJournal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("CbaModel.FK_JHE01_LEG01", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("CbaModel.FK_JHE01_LEG01", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_LEG01", "Shipment")]
        public EntityCollection<Shipment> LegalEntityShippings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("CbaModel.FK_SHI01_LEG01", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("CbaModel.FK_SHI01_LEG01", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_LEG01", "INV01")]
        public EntityCollection<Invoice> LegalEntityInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CbaModel.FK_INV01_LEG01", "INV01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CbaModel.FK_INV01_LEG01", "INV01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_LEG01_CHA01", "Chart")]
        public Chart LegalEntityChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.FK_LEG01_CHA01", "Chart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.FK_LEG01_CHA01", "Chart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Chart> LegalEntityChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.FK_LEG01_CHA01", "Chart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Chart>("CbaModel.FK_LEG01_CHA01", "Chart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPA01_LEG01", "BusinessPartner")]
        public EntityCollection<BusinessPartner> LegalEntityBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessPartner>("CbaModel.FK_BPA01_LEG01", "BusinessPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessPartner>("CbaModel.FK_BPA01_LEG01", "BusinessPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_LEG01_ADD01", "ADD01")]
        public Address LegalEntityAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("CbaModel.FK_LEG01_ADD01", "ADD01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("CbaModel.FK_LEG01_ADD01", "ADD01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> LegalEntityAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("CbaModel.FK_LEG01_ADD01", "ADD01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("CbaModel.FK_LEG01_ADD01", "ADD01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_LEG01", "POR01")]
        public EntityCollection<PurchaseOrder> LegalEntityPurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_LEG01", "POR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_LEG01", "POR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_LEG01", "SOR01")]
        public EntityCollection<SaleOrder> LegalEntitySaleOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_LEG01", "SOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_LEG01", "SOR01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Period")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Period : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Period object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Period CreatePeriod(global::System.Int32 id)
        {
            Period period = new Period();
            period.Id = id;
            return period;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Adjustment
        {
            get
            {
                return _Adjustment;
            }
            set
            {
                OnAdjustmentChanging(value);
                ReportPropertyChanging("Adjustment");
                _Adjustment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Adjustment");
                OnAdjustmentChanged();
            }
        }
        private global::System.String _Adjustment;
        partial void OnAdjustmentChanging(global::System.String value);
        partial void OnAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Calendar
        {
            get
            {
                return _Calendar;
            }
            set
            {
                OnCalendarChanging(value);
                ReportPropertyChanging("Calendar");
                _Calendar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calendar");
                OnCalendarChanged();
            }
        }
        private Nullable<global::System.Int32> _Calendar;
        partial void OnCalendarChanging(Nullable<global::System.Int32> value);
        partial void OnCalendarChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PER01_CAL01_FK", "Calendar")]
        public Calendar PeriodCalendar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.PER01_CAL01_FK", "Calendar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.PER01_CAL01_FK", "Calendar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Calendar> PeriodCalendarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Calendar>("CbaModel.PER01_CAL01_FK", "Calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Calendar>("CbaModel.PER01_CAL01_FK", "Calendar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAL01_PER01_FK", "BAL01")]
        public EntityCollection<Balance> PeriodBalance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Balance>("CbaModel.BAL01_PER01_FK", "BAL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Balance>("CbaModel.BAL01_PER01_FK", "BAL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "JHE01_PER01_FK", "JHE01")]
        public EntityCollection<Journal> PeriodJournal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("CbaModel.JHE01_PER01_FK", "JHE01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("CbaModel.JHE01_PER01_FK", "JHE01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BUL01_PER01_FK", "BUL01")]
        public EntityCollection<BudgetLines> PeriodBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BudgetLines>("CbaModel.BUL01_PER01_FK", "BUL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BudgetLines>("CbaModel.BUL01_PER01_FK", "BUL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BIL01_PER01", "BIL01")]
        public EntityCollection<Bill> PeriodBill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("CbaModel.FK_BIL01_PER01", "BIL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("CbaModel.FK_BIL01_PER01", "BIL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GOR01_PER01", "GOR01")]
        public EntityCollection<GoodsReceipt> PeriodGoodsReceipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_PER01", "GOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceipt>("CbaModel.FK_GOR01_PER01", "GOR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_PER01", "RFQ01")]
        public EntityCollection<RequestForQuote> PeriodRequestForQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_PER01", "RFQ01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForQuote>("CbaModel.FK_RFQ01_PER01", "RFQ01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_PER01", "QUO01")]
        public EntityCollection<Quote> PeriodQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quote>("CbaModel.FK_QUO01_PER01", "QUO01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quote>("CbaModel.FK_QUO01_PER01", "QUO01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_PER01", "Shipment")]
        public EntityCollection<Shipment> PeriodShipping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("CbaModel.FK_SHI01_PER01", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("CbaModel.FK_SHI01_PER01", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INV01_PER01", "INV01")]
        public EntityCollection<Invoice> PeriodInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CbaModel.FK_INV01_PER01", "INV01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CbaModel.FK_INV01_PER01", "INV01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_PER01", "POR01")]
        public EntityCollection<PurchaseOrder> PeriodPurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_PER01", "POR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("CbaModel.FK_POR01_PER01", "POR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_PER01", "SOR01")]
        public EntityCollection<SaleOrder> PeriodSaleOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_PER01", "SOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleOrder>("CbaModel.FK_SOR01_PER01", "SOR01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            Product product = new Product();
            product.Id = id;
            product.Code = code;
            product.Name = name;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ListPrice
        {
            get
            {
                return _ListPrice;
            }
            set
            {
                OnListPriceChanging(value);
                ReportPropertyChanging("ListPrice");
                _ListPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListPrice");
                OnListPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ListPrice;
        partial void OnListPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnListPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SizeMeasure
        {
            get
            {
                return _SizeMeasure;
            }
            set
            {
                OnSizeMeasureChanging(value);
                ReportPropertyChanging("SizeMeasure");
                _SizeMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SizeMeasure");
                OnSizeMeasureChanged();
            }
        }
        private global::System.String _SizeMeasure;
        partial void OnSizeMeasureChanging(global::System.String value);
        partial void OnSizeMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WeightMeasure
        {
            get
            {
                return _WeightMeasure;
            }
            set
            {
                OnWeightMeasureChanging(value);
                ReportPropertyChanging("WeightMeasure");
                _WeightMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WeightMeasure");
                OnWeightMeasureChanged();
            }
        }
        private global::System.String _WeightMeasure;
        partial void OnWeightMeasureChanging(global::System.String value);
        partial void OnWeightMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private global::System.String _Class;
        partial void OnClassChanging(global::System.String value);
        partial void OnClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Discontinued
        {
            get
            {
                return _Discontinued;
            }
            set
            {
                OnDiscontinuedChanging(value);
                ReportPropertyChanging("Discontinued");
                _Discontinued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discontinued");
                OnDiscontinuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Discontinued;
        partial void OnDiscontinuedChanging(Nullable<global::System.DateTime> value);
        partial void OnDiscontinuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Subfamily
        {
            get
            {
                return _Subfamily;
            }
            set
            {
                OnSubfamilyChanging(value);
                ReportPropertyChanging("Subfamily");
                _Subfamily = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subfamily");
                OnSubfamilyChanged();
            }
        }
        private Nullable<global::System.Int32> _Subfamily;
        partial void OnSubfamilyChanging(Nullable<global::System.Int32> value);
        partial void OnSubfamilyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PRO01_PSF01_FK", "ProductSubFamily")]
        public ProductSubFamily ProductSubfamily
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PRO01_PSF01_FK", "ProductSubFamily").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PRO01_PSF01_FK", "ProductSubFamily").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductSubFamily> ProductSubfamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PRO01_PSF01_FK", "ProductSubFamily");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductSubFamily>("CbaModel.PRO01_PSF01_FK", "ProductSubFamily", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_PRO01", "BLI01")]
        public EntityCollection<BillLines> ProductBillLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillLines>("CbaModel.FK_BLI01_PRO01", "BLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillLines>("CbaModel.FK_BLI01_PRO01", "BLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "GRL01_PRO01_FK", "GRL01")]
        public EntityCollection<GoodsReceiptLines> ProductGoodsReceiptLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceiptLines>("CbaModel.GRL01_PRO01_FK", "GRL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceiptLines>("CbaModel.GRL01_PRO01_FK", "GRL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RFL01_PRO01_FK", "RFL01")]
        public EntityCollection<RequestForQuoteLines> ProductRequestForQuoteLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForQuoteLines>("CbaModel.RFL01_PRO01_FK", "RFL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForQuoteLines>("CbaModel.RFL01_PRO01_FK", "RFL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_PRO01", "QLI01")]
        public EntityCollection<QuoteLines> ProductQuoteLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_PRO01", "QLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_PRO01", "QLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_PRO01", "ShipmentLines")]
        public EntityCollection<ShipmentLines> ProductShippingLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_PRO01", "ShipmentLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_PRO01", "ShipmentLines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_PRO01", "INL01")]
        public EntityCollection<InvoiceLines> ProductInvoiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_PRO01", "INL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_PRO01", "INL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "POL01_PRO01_FK", "POL01")]
        public EntityCollection<PurchaseOrderLines> ProductPurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderLines>("CbaModel.POL01_PRO01_FK", "POL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderLines>("CbaModel.POL01_PRO01_FK", "POL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "SOL01_PRO01_FK", "SOL01")]
        public EntityCollection<SaleOrderLines> ProductSaleOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleOrderLines>("CbaModel.SOL01_PRO01_FK", "SOL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleOrderLines>("CbaModel.SOL01_PRO01_FK", "SOL01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="ProductFamily")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductFamily : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductFamily object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductFamily CreateProductFamily(global::System.Int32 id, global::System.String name)
        {
            ProductFamily productFamily = new ProductFamily();
            productFamily.Id = id;
            productFamily.Name = name;
            return productFamily;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PSF01_PFA01_FK", "PSF01")]
        public ProductSubFamily Subfamily
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PSF01_PFA01_FK", "PSF01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PSF01_PFA01_FK", "PSF01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductSubFamily> SubfamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSubFamily>("CbaModel.PSF01_PFA01_FK", "PSF01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductSubFamily>("CbaModel.PSF01_PFA01_FK", "PSF01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="ProductSubFamily")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSubFamily : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSubFamily object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductSubFamily CreateProductSubFamily(global::System.Int32 id, global::System.String name)
        {
            ProductSubFamily productSubFamily = new ProductSubFamily();
            productSubFamily.Id = id;
            productSubFamily.Name = name;
            return productSubFamily;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Family
        {
            get
            {
                return _Family;
            }
            set
            {
                OnFamilyChanging(value);
                ReportPropertyChanging("Family");
                _Family = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Family");
                OnFamilyChanged();
            }
        }
        private Nullable<global::System.Int32> _Family;
        partial void OnFamilyChanging(Nullable<global::System.Int32> value);
        partial void OnFamilyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PSF01_PFA01_FK", "PFA01")]
        public ProductFamily ProductFamily
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFamily>("CbaModel.PSF01_PFA01_FK", "PFA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFamily>("CbaModel.PSF01_PFA01_FK", "PFA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductFamily> ProductFamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductFamily>("CbaModel.PSF01_PFA01_FK", "PFA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductFamily>("CbaModel.PSF01_PFA01_FK", "PFA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "PRO01_PSF01_FK", "PRO01")]
        public EntityCollection<Product> SubfamilyProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("CbaModel.PRO01_PSF01_FK", "PRO01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("CbaModel.PRO01_PSF01_FK", "PRO01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int32 id)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.Id = id;
            return purchaseOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Documenttype
        {
            get
            {
                return _Documenttype;
            }
            set
            {
                OnDocumenttypeChanging(value);
                ReportPropertyChanging("Documenttype");
                _Documenttype = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Documenttype");
                OnDocumenttypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Documenttype;
        partial void OnDocumenttypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumenttypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "POL01_POR01_FK", "POL01")]
        public EntityCollection<PurchaseOrderLines> PurchaseOrderLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrderLines>("CbaModel.POL01_POR01_FK", "POL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrderLines>("CbaModel.POL01_POR01_FK", "POL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_BPA01", "BusinessPartner")]
        public BusinessPartner PurchaseOrderBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_POR01_BPA01", "BusinessPartner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_POR01_BPA01", "BusinessPartner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> PurchaseOrderBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_POR01_BPA01", "BusinessPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_POR01_BPA01", "BusinessPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_LEG01", "LegalEntity")]
        public LegalEntity PurchaseOrderLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_POR01_LEG01", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_POR01_LEG01", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> PurchaseOrderLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_POR01_LEG01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_POR01_LEG01", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_POR01_PER01", "Period")]
        public Period PurchaseOrderPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_POR01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_POR01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> PurchaseOrderPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_POR01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_POR01_PER01", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="PurchaseOrderLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrderLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrderLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="purchaseOrderId">Initial value of the PurchaseOrderId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static PurchaseOrderLines CreatePurchaseOrderLines(global::System.Int32 lineId, global::System.Int32 purchaseOrderId, global::System.Int32 quantity, global::System.Decimal price, global::System.Decimal lineGross)
        {
            PurchaseOrderLines purchaseOrderLines = new PurchaseOrderLines();
            purchaseOrderLines.LineId = lineId;
            purchaseOrderLines.PurchaseOrderId = purchaseOrderId;
            purchaseOrderLines.Quantity = quantity;
            purchaseOrderLines.Price = price;
            purchaseOrderLines.LineGross = lineGross;
            return purchaseOrderLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseOrderId
        {
            get
            {
                return _PurchaseOrderId;
            }
            set
            {
                if (_PurchaseOrderId != value)
                {
                    OnPurchaseOrderIdChanging(value);
                    ReportPropertyChanging("PurchaseOrderId");
                    _PurchaseOrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PurchaseOrderId");
                    OnPurchaseOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseOrderId;
        partial void OnPurchaseOrderIdChanging(global::System.Int32 value);
        partial void OnPurchaseOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "POL01_POR01_FK", "POR01")]
        public PurchaseOrder LinePurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CbaModel.POL01_POR01_FK", "POR01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CbaModel.POL01_POR01_FK", "POR01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> LinePurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("CbaModel.POL01_POR01_FK", "POR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("CbaModel.POL01_POR01_FK", "POR01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "POL01_PRO01_FK", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.POL01_PRO01_FK", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.POL01_PRO01_FK", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.POL01_PRO01_FK", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.POL01_PRO01_FK", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Quote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Quote CreateQuote(global::System.Int32 id)
        {
            Quote quote = new Quote();
            quote.Id = id;
            return quote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private global::System.String _GrossTotal;
        partial void OnGrossTotalChanging(global::System.String value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_QUO01", "QLI01")]
        public EntityCollection<QuoteLines> QuoteLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_QUO01", "QLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_QUO01", "QLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_BPA01", "BPA01")]
        public BusinessPartner QuoteBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_QUO01_BPA01", "BPA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_QUO01_BPA01", "BPA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> QuoteBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_QUO01_BPA01", "BPA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_QUO01_BPA01", "BPA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_LEG01", "LEG01")]
        public LegalEntity QuoteLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_QUO01_LEG01", "LEG01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_QUO01_LEG01", "LEG01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> QuoteLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_QUO01_LEG01", "LEG01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_QUO01_LEG01", "LEG01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QUO01_PER01", "Period")]
        public Period QuotePeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_QUO01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_QUO01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> QuotePeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_QUO01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_QUO01_PER01", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="QuoteLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuoteLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuoteLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="quoteId">Initial value of the QuoteId property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static QuoteLines CreateQuoteLines(global::System.Int32 lineId, global::System.Int32 quoteId, global::System.Decimal lineGross)
        {
            QuoteLines quoteLines = new QuoteLines();
            quoteLines.LineId = lineId;
            quoteLines.QuoteId = quoteId;
            quoteLines.LineGross = lineGross;
            return quoteLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuoteId
        {
            get
            {
                return _QuoteId;
            }
            set
            {
                if (_QuoteId != value)
                {
                    OnQuoteIdChanging(value);
                    ReportPropertyChanging("QuoteId");
                    _QuoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuoteId");
                    OnQuoteIdChanged();
                }
            }
        }
        private global::System.Int32 _QuoteId;
        partial void OnQuoteIdChanging(global::System.Int32 value);
        partial void OnQuoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_PRO01", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_QLI01_PRO01", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_QLI01_PRO01", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_QLI01_PRO01", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.FK_QLI01_PRO01", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_QUO01", "QUO01")]
        public Quote LineQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("CbaModel.FK_QLI01_QUO01", "QUO01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("CbaModel.FK_QLI01_QUO01", "QUO01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quote> LineQuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quote>("CbaModel.FK_QLI01_QUO01", "QUO01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quote>("CbaModel.FK_QLI01_QUO01", "QUO01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_TAX01", "Tax")]
        public Tax LineTaxId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_QLI01_TAX01", "Tax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_QLI01_TAX01", "Tax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tax> LineTaxIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_QLI01_TAX01", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tax>("CbaModel.FK_QLI01_TAX01", "Tax", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Rate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Rate CreateRate(global::System.Int32 id)
        {
            Rate rate = new Rate();
            rate.Id = id;
            return rate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private Nullable<global::System.Single> _ExchangeRate;
        partial void OnExchangeRateChanging(Nullable<global::System.Single> value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyFrom
        {
            get
            {
                return _CurrencyFrom;
            }
            set
            {
                OnCurrencyFromChanging(value);
                ReportPropertyChanging("CurrencyFrom");
                _CurrencyFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyFrom");
                OnCurrencyFromChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyFrom;
        partial void OnCurrencyFromChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyTo
        {
            get
            {
                return _CurrencyTo;
            }
            set
            {
                OnCurrencyToChanging(value);
                ReportPropertyChanging("CurrencyTo");
                _CurrencyTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyTo");
                OnCurrencyToChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyTo;
        partial void OnCurrencyToChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RAT01_CUR01_FROM_FK", "Currency")]
        public Currency ExchangeFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_FROM_FK", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_FROM_FK", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> ExchangeFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_FROM_FK", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("CbaModel.RAT01_CUR01_FROM_FK", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RAT01_CUR01_TO_FK", "Currency")]
        public Currency ExchangeTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_TO_FK", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_TO_FK", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> ExchangeToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("CbaModel.RAT01_CUR01_TO_FK", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("CbaModel.RAT01_CUR01_TO_FK", "Currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="RequestForQuote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestForQuote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestForQuote object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static RequestForQuote CreateRequestForQuote(global::System.Int32 id)
        {
            RequestForQuote requestForQuote = new RequestForQuote();
            requestForQuote.Id = id;
            return requestForQuote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RFL01_RFQ01_FK", "RFL01")]
        public EntityCollection<RequestForQuoteLines> RequestForQuoteLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestForQuoteLines>("CbaModel.RFL01_RFQ01_FK", "RFL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestForQuoteLines>("CbaModel.RFL01_RFQ01_FK", "RFL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_BPA01", "BPA01")]
        public BusinessPartner RequestForQuoteBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_RFQ01_BPA01", "BPA01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_RFQ01_BPA01", "BPA01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> RequestForQuoteBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_RFQ01_BPA01", "BPA01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_RFQ01_BPA01", "BPA01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_LEG01", "LEG01")]
        public LegalEntity RequestForQuoteLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_RFQ01_LEG01", "LEG01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_RFQ01_LEG01", "LEG01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> RequestForQuoteLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_RFQ01_LEG01", "LEG01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_RFQ01_LEG01", "LEG01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_RFQ01_PER01", "Period")]
        public Period RequestForQuotePeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_RFQ01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_RFQ01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> RequestForQuotePeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_RFQ01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_RFQ01_PER01", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="RequestForQuoteLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestForQuoteLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestForQuoteLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="requestForQuoteId">Initial value of the RequestForQuoteId property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static RequestForQuoteLines CreateRequestForQuoteLines(global::System.Int32 lineId, global::System.Int32 requestForQuoteId, global::System.Decimal lineGross)
        {
            RequestForQuoteLines requestForQuoteLines = new RequestForQuoteLines();
            requestForQuoteLines.LineId = lineId;
            requestForQuoteLines.RequestForQuoteId = requestForQuoteId;
            requestForQuoteLines.LineGross = lineGross;
            return requestForQuoteLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestForQuoteId
        {
            get
            {
                return _RequestForQuoteId;
            }
            set
            {
                if (_RequestForQuoteId != value)
                {
                    OnRequestForQuoteIdChanging(value);
                    ReportPropertyChanging("RequestForQuoteId");
                    _RequestForQuoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequestForQuoteId");
                    OnRequestForQuoteIdChanged();
                }
            }
        }
        private global::System.Int32 _RequestForQuoteId;
        partial void OnRequestForQuoteIdChanging(global::System.Int32 value);
        partial void OnRequestForQuoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RFL01_PRO01_FK", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.RFL01_PRO01_FK", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.RFL01_PRO01_FK", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.RFL01_PRO01_FK", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.RFL01_PRO01_FK", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "RFL01_RFQ01_FK", "RFQ01")]
        public RequestForQuote LineRequestForQuote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestForQuote>("CbaModel.RFL01_RFQ01_FK", "RFQ01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestForQuote>("CbaModel.RFL01_RFQ01_FK", "RFQ01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestForQuote> LineRequestForQuoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestForQuote>("CbaModel.RFL01_RFQ01_FK", "RFQ01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestForQuote>("CbaModel.RFL01_RFQ01_FK", "RFQ01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="SaleOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SaleOrder CreateSaleOrder(global::System.Int32 id)
        {
            SaleOrder saleOrder = new SaleOrder();
            saleOrder.Id = id;
            return saleOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "SOL01_SOR01_FK", "SOL01")]
        public EntityCollection<SaleOrderLines> SaleOrderLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SaleOrderLines>("CbaModel.SOL01_SOR01_FK", "SOL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SaleOrderLines>("CbaModel.SOL01_SOR01_FK", "SOL01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_BPA01", "BusinessPartner")]
        public BusinessPartner SaleOrderBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SOR01_BPA01", "BusinessPartner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SOR01_BPA01", "BusinessPartner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> SaleOrderBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SOR01_BPA01", "BusinessPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_SOR01_BPA01", "BusinessPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_LEG01", "LegalEntity")]
        public LegalEntity SaleOrderLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SOR01_LEG01", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SOR01_LEG01", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> SaleOrderLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SOR01_LEG01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_SOR01_LEG01", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SOR01_PER01", "Period")]
        public Period SaleOrderPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SOR01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SOR01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> SaleOrderPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SOR01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_SOR01_PER01", "Period", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="SaleOrderLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleOrderLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleOrderLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="saleOrderId">Initial value of the SaleOrderId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static SaleOrderLines CreateSaleOrderLines(global::System.Int32 lineId, global::System.Int32 saleOrderId, global::System.Int32 quantity, global::System.Decimal price, global::System.Decimal lineGross)
        {
            SaleOrderLines saleOrderLines = new SaleOrderLines();
            saleOrderLines.LineId = lineId;
            saleOrderLines.SaleOrderId = saleOrderId;
            saleOrderLines.Quantity = quantity;
            saleOrderLines.Price = price;
            saleOrderLines.LineGross = lineGross;
            return saleOrderLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleOrderId
        {
            get
            {
                return _SaleOrderId;
            }
            set
            {
                if (_SaleOrderId != value)
                {
                    OnSaleOrderIdChanging(value);
                    ReportPropertyChanging("SaleOrderId");
                    _SaleOrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleOrderId");
                    OnSaleOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _SaleOrderId;
        partial void OnSaleOrderIdChanging(global::System.Int32 value);
        partial void OnSaleOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "SOL01_PRO01_FK", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.SOL01_PRO01_FK", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.SOL01_PRO01_FK", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.SOL01_PRO01_FK", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.SOL01_PRO01_FK", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "SOL01_SOR01_FK", "SOR01")]
        public SaleOrder LineSaleOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleOrder>("CbaModel.SOL01_SOR01_FK", "SOR01").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleOrder>("CbaModel.SOL01_SOR01_FK", "SOR01").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SaleOrder> LineSaleOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SaleOrder>("CbaModel.SOL01_SOR01_FK", "SOR01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SaleOrder>("CbaModel.SOL01_SOR01_FK", "SOR01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Segment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Segment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Segment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="chart">Initial value of the Chart property.</param>
        public static Segment CreateSegment(global::System.Int32 id, global::System.Int32 chart)
        {
            Segment segment = new Segment();
            segment.Id = id;
            segment.Chart = chart;
            return segment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Chart
        {
            get
            {
                return _Chart;
            }
            set
            {
                if (_Chart != value)
                {
                    OnChartChanging(value);
                    ReportPropertyChanging("Chart");
                    _Chart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Chart");
                    OnChartChanged();
                }
            }
        }
        private global::System.Int32 _Chart;
        partial void OnChartChanging(global::System.Int32 value);
        partial void OnChartChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ACS01_CHA01_FK", "Chart")]
        public Chart SegmentChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACS01_CHA01_FK", "Chart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACS01_CHA01_FK", "Chart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Chart> SegmentChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Chart>("CbaModel.ACS01_CHA01_FK", "Chart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Chart>("CbaModel.ACS01_CHA01_FK", "Chart", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Shipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shipment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Shipment CreateShipment(global::System.Int32 id)
        {
            Shipment shipment = new Shipment();
            shipment.Id = id;
            return shipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                OnDocumentIdChanging(value);
                ReportPropertyChanging("DocumentId");
                _DocumentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentId");
                OnDocumentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentId;
        partial void OnDocumentIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentStatus
        {
            get
            {
                return _DocumentStatus;
            }
            set
            {
                OnDocumentStatusChanging(value);
                ReportPropertyChanging("DocumentStatus");
                _DocumentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentStatus");
                OnDocumentStatusChanged();
            }
        }
        private global::System.String _DocumentStatus;
        partial void OnDocumentStatusChanging(global::System.String value);
        partial void OnDocumentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrigin
        {
            get
            {
                return _DocumentOrigin;
            }
            set
            {
                OnDocumentOriginChanging(value);
                ReportPropertyChanging("DocumentOrigin");
                _DocumentOrigin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrigin");
                OnDocumentOriginChanged();
            }
        }
        private global::System.String _DocumentOrigin;
        partial void OnDocumentOriginChanging(global::System.String value);
        partial void OnDocumentOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentOriginType
        {
            get
            {
                return _DocumentOriginType;
            }
            set
            {
                OnDocumentOriginTypeChanging(value);
                ReportPropertyChanging("DocumentOriginType");
                _DocumentOriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentOriginType");
                OnDocumentOriginTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentOriginType;
        partial void OnDocumentOriginTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossTotal
        {
            get
            {
                return _GrossTotal;
            }
            set
            {
                OnGrossTotalChanging(value);
                ReportPropertyChanging("GrossTotal");
                _GrossTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossTotal");
                OnGrossTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossTotal;
        partial void OnGrossTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DiscountTotal
        {
            get
            {
                return _DiscountTotal;
            }
            set
            {
                OnDiscountTotalChanging(value);
                ReportPropertyChanging("DiscountTotal");
                _DiscountTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTotal");
                OnDiscountTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _DiscountTotal;
        partial void OnDiscountTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxTotal
        {
            get
            {
                return _TaxTotal;
            }
            set
            {
                OnTaxTotalChanging(value);
                ReportPropertyChanging("TaxTotal");
                _TaxTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxTotal");
                OnTaxTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxTotal;
        partial void OnTaxTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnNetTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LegalEntity
        {
            get
            {
                return _LegalEntity;
            }
            set
            {
                OnLegalEntityChanging(value);
                ReportPropertyChanging("LegalEntity");
                _LegalEntity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalEntity");
                OnLegalEntityChanged();
            }
        }
        private Nullable<global::System.Int32> _LegalEntity;
        partial void OnLegalEntityChanging(Nullable<global::System.Int32> value);
        partial void OnLegalEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessPartner
        {
            get
            {
                return _BusinessPartner;
            }
            set
            {
                OnBusinessPartnerChanging(value);
                ReportPropertyChanging("BusinessPartner");
                _BusinessPartner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessPartner");
                OnBusinessPartnerChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessPartner;
        partial void OnBusinessPartnerChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessPartnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _Period;
        partial void OnPeriodChanging(Nullable<global::System.Int32> value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentType
        {
            get
            {
                return _DocumentType;
            }
            set
            {
                OnDocumentTypeChanging(value);
                ReportPropertyChanging("DocumentType");
                _DocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentType");
                OnDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentType;
        partial void OnDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_BPA01", "BusinessPartner")]
        public BusinessPartner ShipmentBusinessPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SHI01_BPA01", "BusinessPartner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SHI01_BPA01", "BusinessPartner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessPartner> ShipmentBusinessPartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessPartner>("CbaModel.FK_SHI01_BPA01", "BusinessPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessPartner>("CbaModel.FK_SHI01_BPA01", "BusinessPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_LEG01", "LegalEntity")]
        public LegalEntity ShipmentLegalEntity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SHI01_LEG01", "LegalEntity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SHI01_LEG01", "LegalEntity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LegalEntity> ShipmentLegalEntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LegalEntity>("CbaModel.FK_SHI01_LEG01", "LegalEntity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LegalEntity>("CbaModel.FK_SHI01_LEG01", "LegalEntity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHI01_PER01", "Period")]
        public Period ShipmentPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SHI01_PER01", "Period").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SHI01_PER01", "Period").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Period> ShipmentPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Period>("CbaModel.FK_SHI01_PER01", "Period");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Period>("CbaModel.FK_SHI01_PER01", "Period", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_SHI01", "ShipmentLines")]
        public EntityCollection<ShipmentLines> ShipmentLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_SHI01", "ShipmentLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_SHI01", "ShipmentLines", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="ShipmentLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipmentLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShipmentLines object.
        /// </summary>
        /// <param name="lineId">Initial value of the LineId property.</param>
        /// <param name="shipmentId">Initial value of the ShipmentId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="lineGross">Initial value of the LineGross property.</param>
        public static ShipmentLines CreateShipmentLines(global::System.Int32 lineId, global::System.Int32 shipmentId, global::System.Int32 quantity, global::System.Decimal price, global::System.Decimal lineGross)
        {
            ShipmentLines shipmentLines = new ShipmentLines();
            shipmentLines.LineId = lineId;
            shipmentLines.ShipmentId = shipmentId;
            shipmentLines.Quantity = quantity;
            shipmentLines.Price = price;
            shipmentLines.LineGross = lineGross;
            return shipmentLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineId
        {
            get
            {
                return _LineId;
            }
            set
            {
                if (_LineId != value)
                {
                    OnLineIdChanging(value);
                    ReportPropertyChanging("LineId");
                    _LineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LineId");
                    OnLineIdChanged();
                }
            }
        }
        private global::System.Int32 _LineId;
        partial void OnLineIdChanging(global::System.Int32 value);
        partial void OnLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShipmentId
        {
            get
            {
                return _ShipmentId;
            }
            set
            {
                if (_ShipmentId != value)
                {
                    OnShipmentIdChanging(value);
                    ReportPropertyChanging("ShipmentId");
                    _ShipmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShipmentId");
                    OnShipmentIdChanged();
                }
            }
        }
        private global::System.Int32 _ShipmentId;
        partial void OnShipmentIdChanging(global::System.Int32 value);
        partial void OnShipmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Int32> _Product;
        partial void OnProductChanging(Nullable<global::System.Int32> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                OnTaxIdChanging(value);
                ReportPropertyChanging("TaxId");
                _TaxId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxId");
                OnTaxIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxId;
        partial void OnTaxIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LineGross
        {
            get
            {
                return _LineGross;
            }
            set
            {
                OnLineGrossChanging(value);
                ReportPropertyChanging("LineGross");
                _LineGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGross");
                OnLineGrossChanged();
            }
        }
        private global::System.Decimal _LineGross;
        partial void OnLineGrossChanging(global::System.Decimal value);
        partial void OnLineGrossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineDiscount
        {
            get
            {
                return _LineDiscount;
            }
            set
            {
                OnLineDiscountChanging(value);
                ReportPropertyChanging("LineDiscount");
                _LineDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineDiscount");
                OnLineDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineDiscount;
        partial void OnLineDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTax
        {
            get
            {
                return _LineTax;
            }
            set
            {
                OnLineTaxChanging(value);
                ReportPropertyChanging("LineTax");
                _LineTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTax");
                OnLineTaxChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTax;
        partial void OnLineTaxChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineTotal
        {
            get
            {
                return _LineTotal;
            }
            set
            {
                OnLineTotalChanging(value);
                ReportPropertyChanging("LineTotal");
                _LineTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineTotal");
                OnLineTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineTotal;
        partial void OnLineTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnLineTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_SHI01", "Shipment")]
        public Shipment LineShipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("CbaModel.FK_SHL01_SHI01", "Shipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("CbaModel.FK_SHL01_SHI01", "Shipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> LineShipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("CbaModel.FK_SHL01_SHI01", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipment>("CbaModel.FK_SHL01_SHI01", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_PRO01", "Product")]
        public Product LineProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_SHL01_PRO01", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_SHL01_PRO01", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> LineProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CbaModel.FK_SHL01_PRO01", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CbaModel.FK_SHL01_PRO01", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_TAX01", "Tax")]
        public Tax LineTaxId
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_SHL01_TAX01", "Tax").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_SHL01_TAX01", "Tax").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tax> LineTaxIdReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tax>("CbaModel.FK_SHL01_TAX01", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tax>("CbaModel.FK_SHL01_TAX01", "Tax", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Tax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tax : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tax object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Tax CreateTax(global::System.Int32 id)
        {
            Tax tax = new Tax();
            tax.Id = id;
            return tax;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Single> _Rate;
        partial void OnRateChanging(Nullable<global::System.Single> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private Nullable<global::System.Int32> _Account;
        partial void OnAccountChanging(Nullable<global::System.Int32> value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Territory
        {
            get
            {
                return _Territory;
            }
            set
            {
                OnTerritoryChanging(value);
                ReportPropertyChanging("Territory");
                _Territory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Territory");
                OnTerritoryChanged();
            }
        }
        private global::System.String _Territory;
        partial void OnTerritoryChanging(global::System.String value);
        partial void OnTerritoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BLI01_TAX01", "BLI01")]
        public EntityCollection<BillLines> TaxBillLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillLines>("CbaModel.FK_BLI01_TAX01", "BLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillLines>("CbaModel.FK_BLI01_TAX01", "BLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_QLI01_TAX01", "QLI01")]
        public EntityCollection<QuoteLines> TaxQuoteLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_TAX01", "QLI01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuoteLines>("CbaModel.FK_QLI01_TAX01", "QLI01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_SHL01_TAX01", "ShipmentLines")]
        public EntityCollection<ShipmentLines> TaxShippingLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_TAX01", "ShipmentLines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShipmentLines>("CbaModel.FK_SHL01_TAX01", "ShipmentLines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_INL01_TAX01", "INL01")]
        public EntityCollection<InvoiceLines> TaxInvoiceLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_TAX01", "INL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceLines>("CbaModel.FK_INL01_TAX01", "INL01", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Territory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Territory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Territory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Territory CreateTerritory(global::System.String id)
        {
            Territory territory = new Territory();
            territory.Id = id;
            return territory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceLanguage
        {
            get
            {
                return _SourceLanguage;
            }
            set
            {
                OnSourceLanguageChanging(value);
                ReportPropertyChanging("SourceLanguage");
                _SourceLanguage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceLanguage");
                OnSourceLanguageChanged();
            }
        }
        private global::System.String _SourceLanguage;
        partial void OnSourceLanguageChanging(global::System.String value);
        partial void OnSourceLanguageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_BPD01_TER01", "BusinessPartnerAddress")]
        public EntityCollection<BusinessPartnerAddress> TerritoryBusinessPartnerAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessPartnerAddress>("CbaModel.FK_BPD01_TER01", "BusinessPartnerAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessPartnerAddress>("CbaModel.FK_BPD01_TER01", "BusinessPartnerAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "ADD01_TER01_FK", "ADD01")]
        public EntityCollection<Address> TerritoryAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("CbaModel.ADD01_TER01_FK", "ADD01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("CbaModel.ADD01_TER01_FK", "ADD01", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "BAN01_TER01_FK", "Bank")]
        public EntityCollection<Bank> TerritoryBank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bank>("CbaModel.BAN01_TER01_FK", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bank>("CbaModel.BAN01_TER01_FK", "Bank", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CbaModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Warehouse CreateWarehouse(global::System.Int32 id, global::System.String name)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.Id = id;
            warehouse.Name = name;
            return warehouse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CbaModel", "FK_GRL01_WAR01", "GRL01")]
        public EntityCollection<GoodsReceiptLines> WarehouseGoodsReceiptLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoodsReceiptLines>("CbaModel.FK_GRL01_WAR01", "GRL01");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoodsReceiptLines>("CbaModel.FK_GRL01_WAR01", "GRL01", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
